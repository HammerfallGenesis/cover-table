/*
 THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
 If you want to view the source, please visit:
 https://github.com/HammerfallGenesis/obsidian-cover-table-plugin
*/

"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/core/Plugin.ts
var Plugin_exports = {};
__export(Plugin_exports, {
  default: () => CoverTablePlugin
});
module.exports = __toCommonJS(Plugin_exports);
var import_obsidian7 = require("obsidian");
var import_fs = require("fs");
var import_path = require("path");
var import_obsidian8 = require("obsidian");

// src/theme/tokens.ts
var makeDefault = () => ({
  base: { white: "#ffffff", black: "#000000" },
  heading: {
    h1: "#ff5555",
    h2: "#ffae42",
    h3: "#f7ff50",
    h4: "#4cd964",
    h5: "#5ac8fa",
    h6: "#af52de"
  },
  list: { bullet: "rgb(54,54,190)", olMarker: "red" },
  bold: { bold: "rgb(138,0,119)" },
  folder: {
    lvl0: { _01: "#0076ad", _25: "#989300", _68: "#9b1000" },
    lvl1: { _01: "#003d5a", _25: "#453a01", _68: "#461300" },
    q: "#848484"
  },
  table: {
    border: "#c0c0c0",
    shadow: "rgba(0,0,0,.10)",
    rowEven: "rgba(0,0,0,.03)",
    rowHover: "rgba(0,0,0,.07)"
  },
  image: { border: "#d0d0d0", shadow: "rgba(0,0,0,.10)" }
});
var DEFAULT_TOKENS = {
  light: makeDefault(),
  dark: (() => {
    const d = makeDefault();
    d.list = { bullet: "rgb(89,89,223)", olMarker: "red" };
    d.bold = { bold: "rgb(255,188,188)" };
    d.table = {
      border: "#444444",
      shadow: "rgba(0,0,0,.55)",
      rowEven: "transparent",
      rowHover: "rgba(255,255,255,.07)"
    };
    d.image = { border: "#555555", shadow: "rgba(0,0,0,.60)" };
    d.folder.lvl0 = { _01: "#91dcff", _25: "#fffcab", _68: "#ffb3ab" };
    d.folder.lvl1 = { _01: "#2ebdff", _25: "#ffdf3e", _68: "#ff7e4f" };
    return d;
  })()
};
var VAR = {
  /* base */
  baseWhite: "--ct-base-white",
  baseBlack: "--ct-base-black",
  /* heading */
  h1: "--ct-h1-dark",
  h2: "--ct-h2-dark",
  h3: "--ct-h3-dark",
  h4: "--ct-h4-dark",
  h5: "--ct-h5-dark",
  h6: "--ct-h6-dark",
  /* list */
  bullet: "--bullet-new-color",
  olMarker: "--ct-ol-marker-dark",
  /* bold */
  bold: "--ct-bold",
  /* folders level0*/
  lvl0_01: "--ct-folder-lvl0-01-dark",
  lvl0_25: "--ct-folder-lvl0-25-dark",
  lvl0_68: "--ct-folder-lvl0-68-dark",
  /* folders level1*/
  lvl1_01: "--ct-folder-lvl1-01-dark",
  lvl1_25: "--ct-folder-lvl1-25-dark",
  lvl1_68: "--ct-folder-lvl1-68-dark",
  folderQ: "--ct-folder-q-dark",
  /* table */
  tBorder: "--ct-table-border",
  tShadow: "--ct-table-shadow",
  tEven: "--ct-table-row-even",
  tHover: "--ct-table-row-hover",
  /* image */
  iBorder: "--ct-image-border",
  iShadow: "--ct-image-shadow"
};
function injectTokens(mode, palette, root = document.documentElement) {
  const P = palette[mode];
  const el = root instanceof Document ? root.documentElement : root;
  const suf = mode === "dark" ? "dark" : "light";
  el.style.setProperty(VAR.baseWhite, P.base.white);
  el.style.setProperty(VAR.baseBlack, P.base.black);
  ["h1", "h2", "h3", "h4", "h5", "h6"].forEach(
    (h) => el.style.setProperty(`--ct-${h}-${suf}`, P.heading[h])
    // ★
  );
  el.style.setProperty(`--ct-bullet-${suf}`, P.list.bullet);
  el.style.setProperty(`--ct-ol-marker-${suf}`, P.list.olMarker);
  el.style.setProperty(`--ct-bold-${suf}`, P.bold.bold);
  const { lvl0, lvl1, q } = P.folder;
  el.style.setProperty(`--ct-folder-lvl0-01-${suf}`, lvl0._01);
  el.style.setProperty(`--ct-folder-lvl0-25-${suf}`, lvl0._25);
  el.style.setProperty(`--ct-folder-lvl0-68-${suf}`, lvl0._68);
  el.style.setProperty(`--ct-folder-lvl1-01-${suf}`, lvl1._01);
  el.style.setProperty(`--ct-folder-lvl1-25-${suf}`, lvl1._25);
  el.style.setProperty(`--ct-folder-lvl1-68-${suf}`, lvl1._68);
  el.style.setProperty(`--ct-folder-q-${suf}`, q);
  el.style.setProperty(VAR.tBorder, P.table.border);
  el.style.setProperty(VAR.tShadow, P.table.shadow);
  el.style.setProperty(VAR.tEven, P.table.rowEven);
  el.style.setProperty(VAR.tHover, P.table.rowHover);
  el.style.setProperty(`--ct-image-border`, P.image.border);
  el.style.setProperty(`--ct-image-shadow`, P.image.shadow);
}

// src/setting.ts
var import_obsidian = require("obsidian");

// src/features/interactive-table/utils/log.ts
function make(method) {
  return (...a) => DEBUG && console[method]("[CT]", ...a);
}
var DEBUG = true;
var Log = {
  /* 토글 스위치 (SettingTab 등에서 호출) */
  setDebug(v) {
    DEBUG = v;
  },
  /* 레벨별 래퍼 */
  d: make("debug"),
  // = debug / log / info → 전부 여기로 통합
  w: make("warn"),
  e: make("error"),
  /* 시간 계측 */
  time(label) {
    DEBUG && console.time(`[CT] ${label}`);
  },
  timeEnd(label) {
    DEBUG && console.timeEnd(`[CT] ${label}`);
  }
};

// src/setting.ts
var DEFAULT_SETTINGS = {
  enableHeaderNumbering: true,
  hideZeroFolders: true,
  hideAllNotes: true,
  listCallouts: [],
  embed: {
    enableEmbedNoPreview: true,
    nonPreviewExtensions: [".pdf", ".exe", ".zip", ".rar"]
  },
  tokens: structuredClone(DEFAULT_TOKENS),
  baseVars: {},
  customCss: "",
  debugLog: false
};
var LABEL = {
  /* Base */
  baseWhite: "Base \u2027 \uBC30\uACBD(\uD770\uC0C9)",
  baseBlack: "Base \u2027 \uAE00\uC790(\uAC80\uC815)",
  /* Heading */
  h1: "H1 (Red)",
  h2: "H2 (Orange)",
  h3: "H3 (Yellow)",
  h4: "H4 (Green)",
  h5: "H5 (Blue)",
  h6: "H6 (Violet)",
  /* List */
  bullet: "List Bullet",
  olMarker: "Ordered-list Number",
  /* Explorer – folders */
  lvl0_01: "Folder L0 - 0~1",
  lvl0_25: "Folder L0 - 2~5",
  lvl0_68: "Folder L0 - 6~8",
  lvl1_01: "Folder L1 - 0~1",
  lvl1_25: "Folder L1 - 2~5",
  lvl1_68: "Folder L1 - 6~8",
  folderQ: "Folder \u201CQ)\u201D",
  /* Table / Image */
  tBorder: "Table Border",
  tShadow: "Table Shadow",
  tRowEven: "Table Row (even)",
  tRowHover: "Table Row (hover)",
  iBorder: "Image Border",
  iShadow: "Image Shadow"
};
var CALLOUT_LIMIT = 5;
var CoverTableSettingTab = class extends import_obsidian.PluginSettingTab {
  constructor(app, plugin) {
    super(app, plugin);
    this.plugin = plugin;
  }
  async commit() {
    await this.plugin.saveSettings();
    injectTokens("dark", this.plugin.settings.tokens);
    injectTokens("light", this.plugin.settings.tokens);
    this.plugin.rebuildListCallouts();
  }
  /*───────────────────────────────────────────────────────────────
    fillMissing() – 누락값 보충
  ───────────────────────────────────────────────────────────────*/
  fillMissing(tokens) {
    ["dark", "light"].forEach((mode) => {
      var _a3, _b;
      const def = DEFAULT_TOKENS[mode];
      const tgt = tokens[mode];
      tgt.base = { ...def.base, ...tgt.base };
      tgt.heading = { ...def.heading, ...tgt.heading };
      tgt.list = { ...def.list, ...tgt.list };
      tgt.bold = { ...def.bold, ...tgt.bold };
      const merge = (d, t) => {
        Object.keys(d).forEach((k) => {
          var _a4;
          (_a4 = t[k]) != null ? _a4 : t[k] = d[k];
        });
      };
      merge(def.folder.lvl0, tgt.folder.lvl0);
      merge(def.folder.lvl1, tgt.folder.lvl1);
      (_b = (_a3 = tgt.folder).q) != null ? _b : _a3.q = def.folder.q;
      tgt.table = { ...def.table, ...tgt.table };
      tgt.image = { ...def.image, ...tgt.image };
    });
  }
  /** 1 행에 ☀(Light) + 🌙(Dark) 두 컬러피커를 그린다 – 안전 버전 */
  addDualPicker(host, label, lightGetter, darkGetter, lightSetter, darkSetter) {
    const row = new import_obsidian.Setting(host).setName(label).setDesc("\u2600 Light \u25B8 left   \xB7   \u{1F319} Dark \u25B8 right");
    const initPicker = (cp, get, set, tip) => {
      var _a3;
      cp.setValue(get()).onChange(async (v) => {
        set(v);
        await this.commit();
      });
      let inp = (_a3 = cp.inputEl) != null ? _a3 : null;
      if (!inp) {
        queueMicrotask(() => {
          var _a4;
          inp = (_a4 = cp.containerEl) == null ? void 0 : _a4.querySelector("input[type='color']");
          inp == null ? void 0 : inp.setAttribute("title", tip);
        });
      } else {
        inp.setAttribute("title", tip);
      }
    };
    row.addColorPicker(
      (cp) => initPicker(cp, lightGetter, lightSetter, "Light mode colour (\u2600)")
    );
    row.addColorPicker(
      (cp) => initPicker(cp, darkGetter, darkSetter, "Dark mode colour (\u{1F319})")
    );
  }
  /* === List-Callout 한 행 생성 === */
  buildCalloutRow(host, co, idx, S) {
    const row = new import_obsidian.Setting(host);
    row.addText(
      (t) => t.setPlaceholder("\u2605").setValue(co.char).onChange(async (v) => {
        co.char = v.trim().charAt(0) || "\u2022";
        await this.commit();
        this.display();
      })
    ).setName(`Marker ${idx + 1}`);
    const addClr = (lab, get, set) => {
      row.addColorPicker((cp) => {
        cp.setValue(get()).onChange(async (v) => {
          set(v);
          await this.commit();
        });
        const setTip = () => {
          var _a3;
          const anyCp = cp;
          const inp = (_a3 = anyCp.containerEl) == null ? void 0 : _a3.querySelector("input[type='color']");
          inp == null ? void 0 : inp.setAttribute("title", lab);
        };
        setTip();
        queueMicrotask(setTip);
      });
    };
    addClr("bgLight", () => co.bgLight, (v) => co.bgLight = v);
    addClr("fgLight", () => co.fgLight, (v) => co.fgLight = v);
    addClr("bgDark", () => co.bgDark, (v) => co.bgDark = v);
    addClr("fgDark", () => co.fgDark, (v) => co.fgDark = v);
    row.addExtraButton(
      (btn) => btn.setIcon("trash").setTooltip("Delete").onClick(async () => {
        S.listCallouts.splice(idx, 1);
        await this.commit();
        this.display();
      })
    );
  }
  /* === 새 Callout 기본값 반환 === */
  newCallout() {
    return {
      char: "\u2605",
      bgLight: "#dbeafe",
      fgLight: "#1e40af",
      bgDark: "#1e3a8a",
      fgDark: "#dbeafe"
    };
  }
  /*──────── 5. UI 렌더링 ────────*/
  display() {
    const c = this.containerEl;
    c.empty();
    const S = this.plugin.settings;
    this.fillMissing(S.tokens);
    new import_obsidian.Setting(c).setName("Debug \uB85C\uADF8 \uD45C\uC2DC").addToggle((t) => t.setValue(this.plugin.settings.debugLog).onChange(async (v) => {
      this.plugin.settings.debugLog = v;
      await this.plugin.saveSettings();
      Log.setDebug(v);
    }));
    new import_obsidian.Setting(c).setName("_0  On / Off").setDesc('Hide every folder or file whose name starts with "0_" in Explorer').addToggle(
      (t) => t.setValue(S.hideZeroFolders).onChange(async (v) => {
        S.hideZeroFolders = v;
        await this.commit();
        this.plugin.applyZeroFolderVisibility();
      })
    );
    new import_obsidian.Setting(c).setName("Hide all notes in Explorer").setDesc("Temporarily hide every file (nav-file); folders stay visible.").addToggle(
      (t) => t.setValue(S.hideAllNotes).onChange(async (v) => {
        S.hideAllNotes = v;
        await this.commit();
        this.plugin.applyExplorerHide();
      })
    );
    c.createEl("h3", { text: "\u{1F3A8} Color palette \u2013 Light / Dark" });
    c.createEl("p", {
      text: "Each row shows two colour pickers:  \u2600  = Light mode   \xB7   \u{1F319}  = Dark mode.",
      cls: "ct-tip"
    });
    this.addDualPicker(
      c,
      LABEL.baseWhite,
      () => S.tokens.light.base.white,
      () => S.tokens.dark.base.white,
      (v) => S.tokens.light.base.white = v,
      (v) => S.tokens.dark.base.white = v
    );
    this.addDualPicker(
      c,
      LABEL.baseBlack,
      () => S.tokens.light.base.black,
      () => S.tokens.dark.base.black,
      (v) => S.tokens.light.base.black = v,
      (v) => S.tokens.dark.base.black = v
    );
    c.createEl("h4", { text: "Headings (H1\u2013H6)" });
    ["h1", "h2", "h3", "h4", "h5", "h6"].forEach(
      (k) => this.addDualPicker(
        c,
        LABEL[k],
        () => S.tokens.light.heading[k],
        () => S.tokens.dark.heading[k],
        (v) => S.tokens.light.heading[k] = v,
        (v) => S.tokens.dark.heading[k] = v
      )
    );
    c.createEl("h4", { text: "List / Bold" });
    ["bullet", "olMarker"].forEach(
      (k) => this.addDualPicker(
        c,
        LABEL[k],
        () => S.tokens.light.list[k],
        () => S.tokens.dark.list[k],
        (v) => S.tokens.light.list[k] = v,
        (v) => S.tokens.dark.list[k] = v
      )
    );
    this.addDualPicker(
      c,
      "Bold text",
      () => S.tokens.light.bold.bold,
      () => S.tokens.dark.bold.bold,
      (v) => S.tokens.light.bold.bold = v,
      (v) => S.tokens.dark.bold.bold = v
    );
    c.createEl("h4", { text: "Explorer folders \u2013 Level 0" });
    ["_01", "_25", "_68"].forEach(
      (k) => this.addDualPicker(
        c,
        LABEL[`lvl0_${k.slice(1)}`],
        () => S.tokens.light.folder.lvl0[k],
        () => S.tokens.dark.folder.lvl0[k],
        (v) => S.tokens.light.folder.lvl0[k] = v,
        (v) => S.tokens.dark.folder.lvl0[k] = v
      )
    );
    c.createEl("h4", { text: "Explorer folders \u2013 Level 1" });
    ["_01", "_25", "_68"].forEach(
      (k) => this.addDualPicker(
        c,
        LABEL[`lvl1_${k.slice(1)}`],
        () => S.tokens.light.folder.lvl1[k],
        () => S.tokens.dark.folder.lvl1[k],
        (v) => S.tokens.light.folder.lvl1[k] = v,
        (v) => S.tokens.dark.folder.lvl1[k] = v
      )
    );
    c.createEl("h4", { text: 'Explorer folder \u2013 "Q)"' });
    this.addDualPicker(
      c,
      LABEL.folderQ,
      () => S.tokens.light.folder.q,
      () => S.tokens.dark.folder.q,
      (v) => S.tokens.light.folder.q = v,
      (v) => S.tokens.dark.folder.q = v
    );
    c.createEl("h3", { text: "\u{1F4DD} List Callouts" });
    S.listCallouts.forEach((co, i) => this.buildCalloutRow(c, co, i, S));
    new import_obsidian.Setting(c).addButton((btn) => {
      const full = S.listCallouts.length >= CALLOUT_LIMIT;
      btn.setButtonText(full ? "Limit reached" : "+ Add").setDisabled(full).setCta().setTooltip(full ? `You can register up to ${CALLOUT_LIMIT} callouts` : "Add a new callout").onClick(async () => {
        if (S.listCallouts.length >= CALLOUT_LIMIT) return;
        S.listCallouts.push(this.newCallout());
        await this.commit();
        this.display();
      });
    }).setName(`\uC0C8 Callout \uCD94\uAC00 (max ${CALLOUT_LIMIT})`);
  }
};

// src/features/tab-manager/TabManager.ts
var import_obsidian2 = require("obsidian");
var TabManager = class {
  // 패치 복원용
  /*─────────── ctor ───────────*/
  constructor(app) {
    this.app = app;
    // ✅ 함수 자체를 저장
    this.restoreOpenLinkText = null;
    this.patchOpenLinkText();
    this.watchFileOpenEvent();
    this.app.vault.on("delete", (file) => {
      if (!(file instanceof import_obsidian2.TFile)) return;
      this.leavesFor(file).forEach((l) => l.detach());
    });
    this.registerGlobalClick();
  }
  /*───────────────────────────────────────────────────────────────
    1. leaf 중복 정리 – file-open 이벤트
  ───────────────────────────────────────────────────────────────*/
  watchFileOpenEvent() {
    this.fileOpenHandler = (...args) => {
      const file = args[0];
      if (!file) return;
      const dup = this.leavesFor(file);
      if (dup.length > 1) dup.slice(1).forEach((l) => l.detach());
    };
    this.app.workspace.on("file-open", this.fileOpenHandler);
  }
  /*───────────────────────────────────────────────────────────────
    2. 전역 클릭 훅 – 탐색기 / PDF 링크 인터셉트
  ───────────────────────────────────────────────────────────────*/
  registerGlobalClick() {
    this.clickHandler = this.handleClick.bind(this);
    this.app.workspace.containerEl.addEventListener(
      "click",
      this.clickHandler,
      true
    );
  }
  /*───────────────────────────────────────────────────────────────
    3. Utilities
  ───────────────────────────────────────────────────────────────*/
  /** 현재 Vault 안에서 *같은 파일* 을 표시하고 있는 모든 Leaf 수집 */
  leavesFor(file) {
    const acc = [];
    this.app.workspace.iterateAllLeaves((leaf) => {
      const f = leaf.view.file;
      if ((f == null ? void 0 : f.path) === file.path) acc.push(leaf);
    });
    return acc;
  }
  /** 이미 열려 있으면 reveal, 없으면 새 Leaf(tab)에 open */
  async focusOrOpenFile(file) {
    const exist = this.leavesFor(file)[0];
    if (exist) return this.app.workspace.revealLeaf(exist);
    const leaf = this.app.workspace.getLeaf("tab");
    await leaf.openFile(file);
    this.app.workspace.revealLeaf(leaf);
  }
  /** 파일·폴더 경로(any) 를 openLinkText 규칙에 맞춰 열기 */
  openPathAny(path) {
    const af = this.app.vault.getAbstractFileByPath(path);
    af instanceof import_obsidian2.TFile ? this.focusOrOpenFile(af) : this.app.workspace.openLinkText(path, "", true);
  }
  /** 폴더-노트(폴더이름.md / index.md / README.md) 탐색 */
  findFolderNote(folderPath) {
    const base = folderPath.split("/").pop() || "";
    for (const p of [
      `${folderPath}.md`,
      `${folderPath}/${base}.md`,
      `${folderPath}/index.md`,
      `${folderPath}/README.md`
    ]) {
      const f = this.app.vault.getAbstractFileByPath(p);
      if (f instanceof import_obsidian2.TFile) return f;
    }
    return null;
  }
  /*───────────────────────────────────────────────────────────────
    4. Global Click Handler
  ───────────────────────────────────────────────────────────────*/
  handleClick(evt) {
    var _a3, _b, _c, _d;
    if (evt.button !== 0 || evt.ctrlKey || evt.metaKey) return;
    const FILE = "div.nav-file-title, div.nav-file-title-content";
    const FOLDER = "div.nav-folder-title";
    const PDF = "a[href$='.pdf']";
    const target = evt.target.closest(`${FILE}, ${FOLDER}, ${PDF}`);
    if (!target) return;
    if (target.matches(FOLDER)) {
      const folderPath = (_c = (_b = target.dataset.path) != null ? _b : (_a3 = target.closest(".nav-folder")) == null ? void 0 : _a3.dataset.path) != null ? _c : "";
      if (!folderPath) return;
      const note = this.findFolderNote(folderPath);
      if (!note) return;
      evt.preventDefault();
      this.focusOrOpenFile(note);
      return;
    }
    if (target.matches(PDF)) {
      const href = target.getAttribute("href") || "";
      if (!href) return;
      evt.preventDefault();
      const file = (_d = this.app.metadataCache.getFirstLinkpathDest(href, "")) != null ? _d : this.app.vault.getAbstractFileByPath(href);
      if (file instanceof import_obsidian2.TFile) this.focusOrOpenFile(file);
      return;
    }
  }
  /*───────────────────────────────────────────────────────────────
    5. openLinkText 패치 – “이미 열려 있으면 reveal”
  ───────────────────────────────────────────────────────────────*/
  patchOpenLinkText() {
    const ws = this.app.workspace;
    const original = ws.openLinkText.bind(ws);
    ws.openLinkText = async (link, src, _newLeaf, state) => {
      const dest = this.app.metadataCache.getFirstLinkpathDest(link, src);
      if (dest instanceof import_obsidian2.TFile) {
        const exist = this.leavesFor(dest)[0];
        if (exist) {
          ws.revealLeaf(exist);
          return exist;
        }
      }
      return original(link, src, true, state);
    };
    this.restoreOpenLinkText = () => ws.openLinkText = original;
  }
  /*───────────────────────────────────────────────────────────────
    6. Destroy – plugin unload
  ───────────────────────────────────────────────────────────────*/
  destroy() {
    var _a3;
    if (this.fileOpenHandler)
      this.app.workspace.off("file-open", this.fileOpenHandler);
    this.app.workspace.containerEl.removeEventListener(
      "click",
      this.clickHandler,
      true
    );
    (_a3 = this.restoreOpenLinkText) == null ? void 0 : _a3.call(this);
  }
};

// src/ui/interactive-table/UIManager.ts
var import_obsidian4 = require("obsidian");

// src/ui/molecules/FilterBar.ts
var import_obsidian3 = require("obsidian");

// src/ui/atoms/dom.ts
var Dom = class {
  /**
   * Element 생성 헬퍼
   * @param tag  "div" | "button" | …
   * @param cls  class="" 값 (공백 구분, 선택)
   * @param text textContent (선택)
   * @returns    HTMLElementTagNameMap[K] – 정확한 태그 타입
   *
   * 📌 사용 예
   * ```ts
   * const btn = Dom.el("button",
   *   "it-btn it-btn--primary",
   *   "Click");
   * ```
   */
  static el(tag, cls = "", text = "") {
    const el = document.createElement(tag);
    if (cls) el.className = cls;
    if (text) el.textContent = text;
    return el;
  }
};

// src/ui/atoms/button.ts
var ButtonFactory = class {
  constructor(app) {
    this.app = app;
  }
  /*============================================================
    create() – 공통 버튼 생성 헬퍼
  ============================================================*/
  create(opts) {
    const btn = Dom.el("button", opts.cls, opts.label);
    if (opts.disabled) {
      btn.classList.add(`${opts.cls}--disabled`);
      btn.setAttribute("aria-disabled", "true");
      btn.disabled = true;
      return btn;
    }
    btn.onclick = opts.onClick;
    return btn;
  }
  /*============================================================
    2-A. Preset Buttons
  ============================================================*/
  /** ↪ **Open Folder** – 파일 관리자에서 폴더/파일 열기 */
  openFolder(relPath) {
    return this.create({
      label: "\u21AA Open Folder",
      cls: "interactive_table-button interactive_table-button--open-folder",
      onClick: async () => {
        try {
          const { shell } = window.require("electron");
          const pathMod = window.require("path");
          const vaultBase = this.app.vault.adapter.basePath;
          const abs = pathMod.resolve(vaultBase, relPath);
          const isFile = pathMod.extname(abs) !== "";
          isFile ? shell.showItemInFolder(abs) : shell.openPath(abs);
        } catch (_) {
        }
      }
    });
  }
  /** ＋ **New note** – 탐색기 ‘새 파일’ 명령 호출 */
  newNote() {
    return this.create({
      label: "\uFF0B New note",
      cls: "interactive_table-button interactive_table-button--new-note",
      onClick: () => this.app.commands.executeCommandById("file-explorer:new-file")
    });
  }
  /** ↻ **Refresh** – async 재렌더 콜백 전담 */
  refresh(onRefresh) {
    return this.create({
      label: "\u21BB",
      cls: "interactive_table-button interactive_table-button--refresh",
      onClick: onRefresh
    });
  }
  /** **Tag Filter** – 현재 태그 표시 & 선택 모달 */
  tagFilter(curTag, onSelect) {
    return this.create({
      label: curTag,
      cls: "interactive_table-button interactive_table-button--tag-filter",
      onClick: onSelect
    });
  }
  /** **Front-matter Filter** – 프로퍼티명 표시 & 선택 모달 */
  filter(propName, onSelect) {
    return this.create({
      label: propName,
      cls: "interactive_table-button interactive_table-filter__btn",
      onClick: onSelect
    });
  }
  /** **Pagination** – ‘← / → / 1…’ 버튼 (disabled 지원) */
  pagination(label, disabled, onClick) {
    return this.create({
      label,
      cls: "interactive_table-pagination__btn",
      disabled,
      onClick
    });
  }
};

// src/ui/atoms/input.ts
var Input = class {
  /*───────────────────────────────
    2-A. Text Input
  ───────────────────────────────*/
  static text(opts = {}) {
    var _a3, _b;
    const el = Dom.el("input", (_a3 = opts.cls) != null ? _a3 : "");
    el.type = "text";
    el.placeholder = (_b = opts.placeholder) != null ? _b : "";
    if (opts.value != null) el.value = String(opts.value);
    if (opts.onEnter)
      el.addEventListener("keydown", (ev) => {
        if (ev.key === "Enter") opts.onEnter(el.value.trim());
      });
    if (opts.onChange)
      el.addEventListener("change", () => opts.onChange(el.value.trim()));
    return el;
  }
  /*───────────────────────────────
    2-B. Number Input
  ───────────────────────────────*/
  static number(opts = {}) {
    var _a3;
    const el = Dom.el("input", (_a3 = opts.cls) != null ? _a3 : "");
    el.type = "number";
    if (opts.min != null) el.min = String(opts.min);
    if (opts.max != null) el.max = String(opts.max);
    if (opts.step != null) el.step = String(opts.step);
    if (opts.value != null) el.value = String(opts.value);
    if (opts.onChange)
      el.addEventListener(
        "change",
        () => opts.onChange(el.value === "" ? NaN : Number(el.value))
      );
    return el;
  }
  /*───────────────────────────────
    2-C. Date Input (YYYY-MM-DD)
  ───────────────────────────────*/
  static date(opts = {}) {
    var _a3;
    const el = Dom.el("input", (_a3 = opts.cls) != null ? _a3 : "");
    el.type = "date";
    if (opts.value != null) {
      const val = opts.value instanceof Date ? opts.value.toISOString().slice(0, 10) : String(opts.value);
      el.value = val;
    }
    if (opts.onChange)
      el.addEventListener(
        "change",
        () => opts.onChange(
          el.value ? /* @__PURE__ */ new Date(`${el.value}T00:00:00`) : ""
        )
      );
    return el;
  }
};

// src/ui/atoms/spinner.ts
var Spinner = class _Spinner {
  /**
   * Create a new spinner element.
   *
   * @param small   set to `true` for 12×12 variant
   * @param cls     extra className(s) appended to `.ct-spinner`
   * @returns       HTMLDivElement ready for insertion
   */
  static create(small = false, cls = "") {
    const spinner = Dom.el("div", `ct-spinner${small ? " ct-spinner--sm" : ""}${cls ? " " + cls : ""}`);
    return spinner;
  }
  /*─────────────────────────────────────────────────────────────
    Convenience helpers mirroring legacy ui.ts API
  ─────────────────────────────────────────────────────────────*/
  /** Legacy alias – default 16×16 spinner */
  static default() {
    return _Spinner.create();
  }
  /** 12×12 tiny spinner (inline icon size) */
  static tiny() {
    return _Spinner.create(true);
  }
};

// src/ui/molecules/FilterBar.ts
var FilterBar = class {
  constructor(app, host, note, vid, cols, cb, opts, fmList, tagList) {
    this.app = app;
    this.note = note;
    this.vid = vid;
    this.cols = cols;
    this.cb = cb;
    this.opts = opts;
    this.fmList = fmList;
    this.tagList = tagList;
    this.btnFactory = new ButtonFactory(app);
    this.wrap = Dom.el("div", "ct-filter-bar");
    host.prepend(this.wrap);
    if (opts.showFrontmatterFilterButton) this.buildFrontmatterFilters();
    if (opts.showTagFilterButton) this.buildTagFilter();
    if (opts.showSearchBox) this.buildSearchBox();
    this.btns = Dom.el("div", "ct-filter-bar__utils");
    this.wrap.appendChild(this.btns);
    if (opts.showOpenFolderButton && opts.folderPath)
      this.btns.appendChild(this.btnFactory.openFolder(opts.folderPath));
    if (opts.showNewNoteButton) {
      const btn = this.btnFactory.newNote();
      btn.onclick = async () => {
        var _a3;
        const folderPath = (_a3 = this.opts.folderPath) != null ? _a3 : this.note.substring(0, this.note.lastIndexOf("/"));
        let tFolder = this.app.vault.getAbstractFileByPath(folderPath);
        if (!(tFolder instanceof import_obsidian3.TFolder)) {
          await this.app.vault.createFolder(folderPath);
          tFolder = this.app.vault.getAbstractFileByPath(folderPath);
        }
        const fileName = `Untitled ${window.moment().format("YYYY-MM-DD HHmmss")}.md`;
        const file = await this.app.fileManager.createNewMarkdownFile(tFolder, fileName);
        await openInNewLeafAndClose(this.app, file.path, host);
      };
      this.btns.appendChild(btn);
    }
    if (opts.showRefreshButton)
      this.btns.appendChild(this.btnFactory.refresh(async () => {
        const btn = event.currentTarget;
        const prev = btn.textContent;
        btn.replaceChildren(Spinner.tiny());
        try {
          await this.cb.rerender();
        } finally {
          btn.textContent = prev != null ? prev : "\u21BB";
        }
      }));
  }
  /*───────────────────────────────────────────────────────────────
    2‑A. Tag Filter Button
  ───────────────────────────────────────────────────────────────*/
  buildTagFilter() {
    const key = `tagFilter_${this.vid}`;
    const cur = this.cb.getState(this.note, this.vid, key) || "ALL";
    const btn = this.btnFactory.tagFilter(cur === "ALL" ? "#Tags" : cur, async () => {
      if (!this.tagList) return;
      const chosen = await this.cb.suggester(this.tagList);
      if (chosen == null) return;
      this.cb.sync(this.note, this.vid, key, chosen);
    });
    if (cur !== "ALL") btn.classList.add("is-active");
    this.wrap.appendChild(btn);
  }
  /*───────────────────────────────────────────────────────────────
    2‑B. Front‑matter Filter Buttons
  ───────────────────────────────────────────────────────────────*/
  buildFrontmatterFilters() {
    this.fmList.forEach(({ prop, values }) => {
      const key = `filter_${this.vid}_${prop}`;
      const cur = this.cb.getState(this.note, this.vid, key) || "ALL";
      const label = cur === "ALL" ? prop : `${prop}: ${cur}`;
      const btn = this.btnFactory.filter(label, async () => {
        const chosen = await this.cb.suggester(values);
        if (chosen == null) return;
        this.cb.sync(this.note, this.vid, key, chosen);
      });
      if (cur !== "ALL") btn.classList.add("is-active");
      this.wrap.appendChild(btn);
    });
  }
  collectPropValues(prop) {
    var _a3, _b;
    const pages = (_b = (_a3 = this.cb.getLocalState(this.note, this.vid)) == null ? void 0 : _a3.pages) != null ? _b : [];
    const set = /* @__PURE__ */ new Set();
    pages.forEach((pg) => {
      const raw = this.cb.getVal(pg, prop);
      const v = this.cb.formatAsDate(raw) || String(raw != null ? raw : "-");
      set.add(v);
    });
    return Array.from(set).filter((v) => v !== "-").sort();
  }
  /*───────────────────────────────────────────────────────────────
    2‑C. Search Box
  ───────────────────────────────────────────────────────────────*/
  buildSearchBox() {
    const keyReady = `search_ready_${this.vid}`;
    const keyQuery = `search_${this.vid}`;
    const prev = this.cb.getState(this.note, this.vid, keyQuery) || "";
    const input = Input.text({
      cls: "ct-filter-bar__search",
      placeholder: "Search\u2026",
      value: prev,
      onEnter: (q) => {
        this.cb.sync(this.note, this.vid, keyReady, true);
        this.cb.sync(this.note, this.vid, keyQuery, q);
      }
    });
    this.wrap.appendChild(input);
  }
};

// src/ui/molecules/Pagination.ts
var Pagination = class {
  constructor(note, vid, cb, host, opts) {
    this.note = note;
    this.vid = vid;
    this.cb = cb;
    var _a3;
    this.btnFactory = new ButtonFactory(cb);
    const per = Math.max(opts.perPage, 1);
    this.totalPages = Math.ceil(opts.totalRows / per);
    if (this.totalPages <= 1) {
      this.wrap = Dom.el("div");
      return;
    }
    this.wrap = Dom.el("div", "ct-pagination");
    host.appendChild(this.wrap);
    this.render((_a3 = opts.maxButtons) != null ? _a3 : 7);
  }
  /*───────────────────────────────────────────────────────────────
    render() – (re)create buttons set
  ───────────────────────────────────────────────────────────────*/
  render(maxBtn) {
    var _a3;
    this.wrap.empty();
    const key = `pagination_${this.vid}`;
    const cur = (_a3 = this.cb.getState(this.note, this.vid, key)) != null ? _a3 : 0;
    const add = (lbl, pg, disabled = false) => {
      const btn = this.btnFactory.pagination(lbl, disabled, () => {
        this.cb.sync(this.note, this.vid, key, pg);
      });
      btn.classList.add(lbl === "\u2190" || lbl === "\u2192" ? "interactive_table-pagination__btn--arrow" : "interactive_table-pagination__btn--num");
      if (disabled) btn.classList.add("is-active");
      this.wrap.appendChild(btn);
    };
    add("\u2190", cur - 1, cur === 0);
    const win = Math.max(3, maxBtn);
    let start = Math.max(0, cur - Math.floor(win / 2));
    let end = start + win - 1;
    if (end >= this.totalPages) {
      end = this.totalPages - 1;
      start = Math.max(0, end - win + 1);
    }
    if (start > 0) add("1", 0);
    if (start > 1) this.wrap.appendChild(Dom.el("span", "ct-pagination__ellipsis", "\u2026"));
    for (let p = start; p <= end; p++) {
      add(String(p + 1), p, p === cur);
    }
    if (end < this.totalPages - 2) this.wrap.appendChild(Dom.el("span", "ct-pagination__ellipsis", "\u2026"));
    if (end < this.totalPages - 1) add(String(this.totalPages), this.totalPages - 1);
    add("\u2192", cur + 1, cur >= this.totalPages - 1);
  }
};

// src/features/interactive-table/utils/tag.ts
function normalizeTags(raw) {
  const arr = raw == null ? [] : Array.isArray(raw) ? raw : raw instanceof Set ? [...raw] : typeof raw === "string" ? raw.split(/[,;]/).filter(Boolean) : [];
  return arr.map((t) => (t != null ? t : "").trim()).filter(Boolean).map((t) => t.startsWith("#") ? t.slice(1) : t);
}

// src/ui/layouts/DataTable.ts
function pad(n) {
  return n.toString().padStart(2, "0");
}
function fmtDate(d) {
  return `${d.getFullYear()}-${pad(d.getMonth() + 1)}-${pad(d.getDate())}`;
}
function renderByFormat(raw, fmt) {
  var _a3;
  if (raw == null) return "";
  switch (fmt) {
    case "num":
      return String(raw);
    case "year": {
      const y = (_a3 = String(raw).match(/\d{4}/)) == null ? void 0 : _a3[0];
      return y != null ? y : String(raw);
    }
    case "date": {
      const d = new Date(raw);
      return isNaN(d.getTime()) ? String(raw) : fmtDate(d);
    }
    case "tags": {
      const sorted = normalizeTags(raw).sort((a, b) => a.localeCompare(b, "ko"));
      return sorted.join(", ");
    }
    default:
      return String(raw);
  }
}
function getVal(row, prop) {
  return prop.startsWith("file.") ? prop.split(".").reduce((v, k) => v == null ? void 0 : v[k], row) : row[prop];
}
var DataTable = class {
  /**
   * Build a complete <table> element according to options.
   */
  static build(opts) {
    const table = Dom.el("table", "ct-data-table");
    if (opts.zebra) table.classList.add("ct-data-table--zebra");
    const thead = Dom.el("thead", "");
    const trHead = Dom.el("tr", "");
    opts.columns.filter((c) => c.column).forEach((col) => {
      const th = Dom.el("th", "ct-data-table__th", col.name);
      const curProp = opts.cb.getState(opts.notePath, opts.viewId, `sort_${opts.viewId}`);
      const curDir = opts.cb.getState(opts.notePath, opts.viewId, `sort_direction_${opts.viewId}`);
      if (col.prop === curProp) {
        if (curDir === "asc") th.classList.add("is-asc");
        if (curDir === "desc") th.classList.add("is-desc");
      }
      th.addEventListener("click", () => {
        trHead.querySelectorAll(".ct-data-table__th").forEach((el) => el.classList.remove("is-asc", "is-desc"));
        const keySort = `sort_${opts.viewId}`;
        const keyDir = `sort_direction_${opts.viewId}`;
        const curProp2 = opts.cb.getState(opts.notePath, opts.viewId, keySort);
        const curDir2 = opts.cb.getState(opts.notePath, opts.viewId, keyDir);
        let nextProp = null;
        let nextDir = null;
        const anySorted = curProp2 && curDir2;
        if (col.prop !== curProp2) {
          if (anySorted) {
            nextProp = null;
            nextDir = null;
          } else {
            nextProp = col.prop;
            nextDir = "asc";
          }
        } else {
          if (curDir2 === null) {
            nextProp = col.prop;
            nextDir = "asc";
          } else if (curDir2 === "asc") {
            nextProp = col.prop;
            nextDir = "desc";
          } else {
            nextProp = null;
            nextDir = null;
          }
        }
        if (nextDir === "asc") th.classList.add("is-asc");
        if (nextDir === "desc") th.classList.add("is-desc");
        opts.cb.sync(opts.notePath, opts.viewId, keySort, nextProp);
        opts.cb.sync(opts.notePath, opts.viewId, keyDir, nextDir);
      });
      trHead.appendChild(th);
    });
    thead.appendChild(trHead);
    table.appendChild(thead);
    const tbody = Dom.el("tbody", "");
    opts.rows.forEach((row, rowIdx) => {
      var _a3, _b;
      const tr = Dom.el("tr", "ct-data-table__tr");
      tr.dataset.path = (_b = (_a3 = row == null ? void 0 : row.file) == null ? void 0 : _a3.path) != null ? _b : "";
      tr.onclick = () => {
        const isActive = tr.classList.contains("ct-row--active");
        if (isActive) {
          tr.classList.remove("ct-row--active");
          return;
        }
        const prev = table.querySelector(".ct-row--active");
        if (prev) prev.classList.remove("ct-row--active");
        tr.classList.add("ct-row--active");
      };
      tr.ondblclick = () => {
        var _a4;
        const file = (_a4 = row == null ? void 0 : row.file) == null ? void 0 : _a4.path;
        if (file) window.app.workspace.openLinkText(file, "", false);
      };
      opts.columns.filter((c) => c.column).forEach((col) => {
        const td = Dom.el("td", "ct-data-table__td");
        let content;
        if (opts.cellRenderer) {
          content = opts.cellRenderer(row, col);
        } else {
          const raw = getVal(row, col.prop);
          content = renderByFormat(raw, col.format);
        }
        if (content instanceof HTMLElement) td.appendChild(content);
        else td.textContent = content;
        tr.appendChild(td);
      });
      tbody.appendChild(tr);
    });
    table.appendChild(tbody);
    return table;
  }
};

// src/ui/interactive-table/UIManager.ts
async function openPathInPopout(app, path) {
  var _a3;
  if (!path) return;
  const file = (_a3 = app.metadataCache.getFirstLinkpathDest(path, "")) != null ? _a3 : app.vault.getAbstractFileByPath(path);
  if (!(file instanceof import_obsidian4.TFile)) return;
  const leaf = app.workspace.openPopoutLeaf();
  await leaf.openFile(file);
  app.workspace.revealLeaf(leaf);
}
async function openInNewLeafAndClose(app, filePath, currHost) {
  var _a3, _b, _c, _d;
  const popoutLeaf = app.workspace.openPopoutLeaf();
  const af = app.vault.getAbstractFileByPath(filePath);
  if (af instanceof import_obsidian4.TFile)
    await popoutLeaf.openFile(af, { active: true });
  else
    await app.workspace.openLinkText(filePath, "", true);
  (_d = (_c = (_b = (_a3 = currHost.closest(".workspace-leaf")) == null ? void 0 : _a3.view) == null ? void 0 : _b.leaf) == null ? void 0 : _c.detach) == null ? void 0 : _d.call(_c);
  const closePopout = () => {
    if (popoutLeaf.view == null) return;
    popoutLeaf.detach();
  };
  const refDelete = app.vault.on("delete", (f) => {
    if (f.path === filePath) closePopout();
  });
  const refOpen = app.workspace.on("file-open", (file) => {
    if (file == null && app.workspace.activeLeaf === popoutLeaf)
      closePopout();
  });
  app.workspace.on("layout-change", () => {
    if (popoutLeaf.view == null) {
      app.vault.offref(refDelete);
      app.workspace.offref(refOpen);
    }
  });
}
var UIManager = class {
  constructor(app, callbacks) {
    this.app = app;
    this.cb = callbacks;
  }
  /*============================================================
    buildView() – (re)render entire Interactive‑Table block
  ============================================================*/
  async buildView(hostPre, notePath, viewId, rows, columns, perPage, totalRows, opts, fmList = [], tagList = null, cb = this.cb) {
    hostPre.empty();
    hostPre.classList.add("ct-it-container");
    const fbOpts = {
      showOpenFolderButton: opts.showOpenFolderButton,
      showNewNoteButton: opts.showNewNoteButton,
      showTagFilterButton: opts.showTagFilterButton,
      showFrontmatterFilterButton: opts.showFrontmatterFilterButton,
      showSearchBox: opts.showSearchBox,
      showRefreshButton: opts.showRefreshButton,
      folderPath: opts.folderPath
    };
    new FilterBar(
      this.app,
      hostPre,
      notePath,
      viewId,
      columns,
      cb,
      fbOpts,
      fmList,
      tagList
    );
    const table = DataTable.build({
      columns,
      rows,
      zebra: true,
      onRowClick: (row) => {
        var _a3;
        const file = (_a3 = row == null ? void 0 : row.file) == null ? void 0 : _a3.path;
        if (!file) return;
        openInNewLeafAndClose(this.app, file, hostPre);
      },
      notePath,
      viewId,
      cb: {
        getState: cb.getState,
        sync: cb.sync
      }
    });
    hostPre.appendChild(table);
    table.addEventListener(
      "dblclick",
      async (e) => {
        var _a3, _b;
        const el = e.target;
        if (el.closest(".nav-file-title")) return;
        const href = (_a3 = el.closest("a")) == null ? void 0 : _a3.getAttribute("href");
        const row = el.closest("tr");
        const path = (_b = href != null ? href : row == null ? void 0 : row.dataset.path) != null ? _b : "";
        if (!path) return;
        e.preventDefault();
        await openPathInPopout(this.app, path);
      },
      true
      // capture 단계
    );
    if (perPage > 0) {
      const pgOpts = {
        perPage,
        totalRows
      };
      new Pagination(notePath, viewId, cb, hostPre, pgOpts);
    }
  }
};

// src/features/interactive-table/services/TableController.ts
var import_obsidian5 = require("obsidian");
var TableController = class {
  constructor(app) {
    this.app = app;
    /*─────────── 필드 ───────────*/
    this.dateYMDRegex = /^(\d{4})-(\d{1,2})-(\d{1,2})$/;
    this.timeHMRegex = /^(\d{1,2}):(\d{1,2})$/;
  }
  /*════════════════════════════════════════════
    A.  “인라인 편집” 공용 진입점
  ════════════════════════════════════════════*/
  /**
   * 파일 이름/프런트매터 등 *단일 프로퍼티* 수정용
   *
   * @example
   *   await svc.editProp({ type: "file name", path: "Diary/2025-05-13.md" });
   */
  async editProp(opts) {
    var _a3, _b;
    const file = this.app.vault.getAbstractFileByPath((0, import_obsidian5.normalizePath)(opts.path));
    if (!(file instanceof import_obsidian5.TFile)) return;
    if (opts.type === "file name") {
      const oldName = file.basename;
      const next = await this.textInput(oldName);
      if (!next || next === oldName) return;
      const folder = (_b = (_a3 = file.parent) == null ? void 0 : _a3.path) != null ? _b : "";
      const ext = file.extension;
      const dest = folder ? `${folder}/${next}.${ext}` : `${next}.${ext}`;
      try {
        await this.app.vault.rename(file, dest);
        new import_obsidian5.Notice("\u2705 File renamed");
      } catch (e) {
        Log.e(e);
        new import_obsidian5.Notice("\u26A0\uFE0F Failed to rename file");
      }
    }
  }
  /*────────────────────────────────────────────
    A-1. 간단 입력 모달
  ────────────────────────────────────────────*/
  async textInput(def) {
    return new Promise((resolve) => {
      const { Modal: Modal2 } = globalThis.coverTable.obsidian;
      class PromptModal extends Modal2 {
        constructor(app) {
          super(app);
          this.result = def;
        }
        onOpen() {
          const { contentEl } = this;
          contentEl.createEl("h1", { text: "Input" });
          const input = contentEl.createEl("input", { value: this.result });
          input.style.width = "100%";
          input.addEventListener("keydown", (ev) => {
            if (ev.key === "Enter") {
              this.result = input.value.trim();
              this.close();
              resolve(this.result);
            }
          });
          const ok = contentEl.createEl("button", { text: "OK" });
          ok.onclick = () => {
            this.result = input.value.trim();
            this.close();
            resolve(this.result);
          };
        }
        onClose() {
          this.contentEl.empty();
        }
      }
      new PromptModal(this.app).open();
    });
  }
  /*════════════════════════════════════════════
    B. 값 추출 / 날짜·시간 파싱 유틸
  ════════════════════════════════════════════*/
  /** Dataview Page → 임의 프로퍼티 값 */
  getVal(page, prop) {
    return prop.startsWith("file.") ? prop.split(".").reduce((v, k) => v == null ? void 0 : v[k], page) : page[prop];
  }
  /** “YYYY-MM-DD” 혹은 Date.parse 가능한 문자열 → Date|null */
  parseDateYMD(str) {
    if (typeof str !== "string") return null;
    const m = str.match(this.dateYMDRegex);
    if (m) {
      const [_, y, mo, d] = m.map(Number);
      if (y < 1e3 || y > 9999 || mo < 1 || mo > 12 || d < 1 || d > 31)
        return null;
      return new Date(y, mo - 1, d);
    }
    const dt = new Date(str);
    return isNaN(dt.getTime()) ? null : dt;
  }
  /** “HH:MM” → Date(today) | null  (정렬용) */
  parseTimeHM(str) {
    if (typeof str !== "string") return null;
    const m = str.match(this.timeHMRegex);
    if (!m) return null;
    const [_, hh, mm] = m.map(Number);
    if (hh > 23 || mm > 59) return null;
    const d = /* @__PURE__ */ new Date();
    d.setHours(hh, mm, 0, 0);
    return d;
  }
  /** 문자열·숫자·날짜 → 소팅 키 */
  getSortValue(v) {
    if (v == null) return "";
    const s = typeof v === "string" ? v : String(v);
    const d = this.parseDateYMD(s) || this.parseTimeHM(s);
    if (d) return d.getTime();
    const n = parseFloat(s);
    return isNaN(n) ? s.toLowerCase() : n;
  }
  /** Date|string|null → “YYYY-MM-DD” */
  formatAsDate(v) {
    if (v == null) return "";
    const d = this.parseDateYMD(String(v));
    if (!d) return String(v);
    const y = d.getFullYear();
    const m = d.getMonth() + 1;
    const dd = d.getDate();
    return `${y}-${m < 10 ? "0" : ""}${m}-${dd < 10 ? "0" : ""}${dd}`;
  }
  /*════════════════════════════════════════════
    C. 정렬 & 필터 – (InteractiveTable 동일 로직)
  ════════════════════════════════════════════*/
  /** in-place 정렬 (mutate) */
  sortByProp(arr, prop, dir = "asc") {
    if (!prop || prop === "title_link" || prop === "tags") return arr;
    return arr.sort((a, b) => {
      const A = this.getSortValue(this.getVal(a, prop));
      const B = this.getSortValue(this.getVal(b, prop));
      if (typeof A === "number" && typeof B === "number")
        return dir === "asc" ? A - B : B - A;
      return dir === "asc" ? String(A).localeCompare(String(B)) : String(B).localeCompare(String(A));
    });
  }
  /*════════════════════════════════════════════
    D. 제너럴 헬퍼
  ════════════════════════════════════════════*/
  /**
   * 옵션 리스트 → SuggestModal
   *  ‣ InteractiveTable 및 UI 모듈에서 직접 호출
   */
  async suggester(values) {
    const { SuggestModal: SuggestModal2 } = globalThis.coverTable.obsidian;
    return new Promise((resolve) => {
      class Sugg extends SuggestModal2 {
        constructor(app) {
          super(app);
        }
        getSuggestions(q) {
          const ql = q.toLowerCase();
          return values.filter((v) => v.toLowerCase().includes(ql));
        }
        renderSuggestion(v, el) {
          el.createEl("div", { text: v });
        }
        onChooseSuggestion(v) {
          resolve(v);
        }
      }
      new Sugg(this.app).open();
    });
  }
};

// src/core/state/StateCenter.ts
var TAB_ID = (crypto == null ? void 0 : crypto.randomUUID) ? crypto.randomUUID() : `tab-${Date.now().toString(36)}-${Math.random().toString(36).slice(2, 10)}`;
var StateCenter = class {
  /**
   * * 2) Constructor (생성자)
   * - 브라우저의 localStorage 및 팝업 메시지를 수신하여 상태를 동기화하는 역할
   */
  constructor() {
    /**
     * * 1) 내부 저장소 구조
     */
    /**
     * * 1.1) viewId별 화면(Pane) 목록 저장소 
     * - 전역함수 호출
     */
    this.paneMap = /* @__PURE__ */ new Map();
    /**
     * * 1.2) viewId별 BroadcastChannel 저장소
     * - 내부함수 호출
     */
    this.bcMap = /* @__PURE__ */ new Map();
    /**
     * * 1.3) viewId별 Listener 함수 목록
     * - 전역함수 호출
     */
    this.subs = /* @__PURE__ */ new Map();
    window.addEventListener("storage", (e) => {
      var _a3;
      if (!((_a3 = e.key) == null ? void 0 : _a3.startsWith("coverTable::")) || e.newValue == null) return;
      const [, notePath, viewId] = e.key.split("::");
      try {
        this.applyRemote(viewId, JSON.parse(e.newValue));
      } catch (e2) {
      }
    });
    window.addEventListener("message", (ev) => {
      var _a3;
      if (!((_a3 = ev.data) == null ? void 0 : _a3.__coverTable)) return;
      const { viewId, payload } = ev.data;
      if (payload.sender === TAB_ID) return;
      this.applyRemote(viewId, payload.state);
    });
  }
  /**
   * * 1.4) [유틸 함수] 화면(Pane)이 DOM에서 사라졌는지 검사 후 제거
   */
  sweep(viewId) {
    var _a3;
    const alive = ((_a3 = this.paneMap.get(viewId)) != null ? _a3 : []).filter((p) => document.body.contains(p.leafEl));
    this.paneMap.set(viewId, alive);
  }
  /**
   * * 3) 전역 함수 목록
   */
  /**
   * * 3.1) addPane
   * - 목적 : 새로운 Inst를 화면에 등록하고, 상태 변화를 감지해서 자동으로 갱신
   * - 입력 : inst
   * - 출력 : x
   */
  addPane(inst) {
    var _a3;
    const list = (_a3 = this.paneMap.get(inst.viewId)) != null ? _a3 : [];
    if (list.some((p) => p.container === inst.container)) {
      return;
    }
    list.push(inst);
    this.paneMap.set(inst.viewId, list);
    Log.d("addPane \u25B6", inst.viewId, "\uD604\uC7AC Pane \uC218:", list.length);
    this.sweep(inst.viewId);
    const fn = async () => {
      Log.d("listener \uD638\uCD9C \u25B6", inst.viewId);
      await inst.refreshView(true);
      const evt = new CustomEvent("__cover_refresh", { detail: inst.viewId });
      window.dispatchEvent(evt);
    };
    this.subscribe(inst.viewId, fn);
    if (inst.leafEl) {
      const ob = new MutationObserver(() => {
        var _a4;
        if (inst.leafEl && !document.body.contains(inst.leafEl)) {
          this.unsubscribe(inst.viewId, fn);
          const remain = ((_a4 = this.paneMap.get(inst.viewId)) != null ? _a4 : []).filter((p) => p !== inst);
          this.paneMap.set(inst.viewId, remain);
          Log.d("Pane \uC81C\uAC70 \u25B6", inst.viewId, "\uB0A8\uC740 Pane:", remain.length);
          ob.disconnect();
        }
      });
      ob.observe(document.body, { childList: true, subtree: true });
    }
    this.ensureChannel(inst.viewId);
  }
  /**
   * * 3.2) removePane
   * - 목적 : 등록된 Inst를 제거하고 자원 정리
   * - 입력 : notePath, viewId
   * - 출력 : x
   */
  removePane(notePath, viewId) {
    var _a3, _b, _c;
    this.sweep(viewId);
    const remain = ((_a3 = this.paneMap.get(viewId)) != null ? _a3 : []).filter((p) => p.notePath !== notePath);
    this.paneMap.set(viewId, remain);
    Log.d("removePane \u25B6", viewId, "\uB0A8\uC740 Pane:", remain.length);
    if (remain.length === 0) {
      (_b = this.subs.get(viewId)) == null ? void 0 : _b.clear();
      this.subs.delete(viewId);
      (_c = this.bcMap.get(viewId)) == null ? void 0 : _c.close();
      this.bcMap.delete(viewId);
      try {
        localStorage.removeItem(this.makeKey(notePath, viewId));
      } catch (e) {
      }
    }
  }
  /**
   * * 4) 내부 함수 목록
   */
  /**
   * * 4.1) get
   * - 목적 : 저장된 상태값 가져오기 (localStorage)
   * - 입력 : notePath, viewId
   * - 출력 : Record
   */
  get(notePath, viewId) {
    const raw = localStorage.getItem(this.makeKey(notePath, viewId));
    try {
      return raw ? JSON.parse(raw) : {};
    } catch (e) {
      return {};
    }
  }
  /**
   * * 4.2) set
   * - 목적 : 상태를 저장하고, 다른 탭에게도 전달하고, 리스너 실행
   * - 입력 : inst, patch, wipe, silent
   * - 출력 : x
   */
  set(inst, patch, wipe = false, silent = false) {
    var _a3;
    Log.d("set \u25B6", inst.viewId, { patch, wipe, silent });
    if (window.__COVER_TABLE_DISABLE_BC) silent = true;
    const key = this.makeKey(inst.notePath, inst.viewId);
    const before = this.get(inst.notePath, inst.viewId);
    const next = wipe ? patch : { ...before, ...patch };
    try {
      localStorage.setItem(key, JSON.stringify(next));
    } catch (e) {
      if ((e == null ? void 0 : e.name) === "QuotaExceededError") {
        console.warn("[Cover-Table] localStorage quota exceeded \u2192 using memory only");
      } else {
        throw e;
      }
    }
    if (!silent) {
      const payload = { sender: TAB_ID, state: next };
      (_a3 = this.bcMap.get(inst.viewId)) == null ? void 0 : _a3.postMessage(payload);
      window.postMessage({ __coverTable: true, viewId: inst.viewId, payload }, "*");
    }
    this.emit(inst.viewId, next);
  }
  /**
   * * 4.3) subscribe
   * - 목적 : 특정 viewId 상태가 바뀔 때 실행될 함수 등록
   * - 입력 : viewId, fn
   * - 출력 : x
   */
  subscribe(viewId, fn) {
    var _a3;
    const set = (_a3 = this.subs.get(viewId)) != null ? _a3 : /* @__PURE__ */ new Set();
    set.add(fn);
    this.subs.set(viewId, set);
  }
  /**
   * * 4.4) unsubscribe
   * - 목적 : 등록된 리스너 제거
   * - 입력 : viewId, fn
   * - 출력 : x
   */
  unsubscribe(viewId, fn) {
    var _a3;
    (_a3 = this.subs.get(viewId)) == null ? void 0 : _a3.delete(fn);
  }
  /**
   * * 4.5) emit
   * - 목적 : 등록된 리스너들 실행 (상태 반영)
   * - 입력 : viewId, state
   * - 출력 : x
   */
  emit(viewId, state) {
    var _a3;
    (_a3 = this.subs.get(viewId)) == null ? void 0 : _a3.forEach((cb) => {
      try {
        cb(state);
      } catch (e) {
        console.error(e);
      }
    });
  }
  /**
   * * 4.6) ensureChannel
   * - 목적 : 탭 간 통신 채널 생성 및 메시지 수신 설정
   * - 입력 : viewId
   * - 출력 : x
   */
  ensureChannel(viewId) {
    if (this.bcMap.has(viewId)) return;
    const bc = new BroadcastChannel(`coverTable-${viewId}`);
    bc.onmessage = (ev) => {
      const { sender, state } = ev.data || {};
      if (sender === TAB_ID) return;
      this.applyRemote(viewId, state);
    };
    this.bcMap.set(viewId, bc);
  }
  /**
   * * 4.7) applyRemote
   * - 목적 : 다른 탭에서 받은 상태를 적용하고 반영
   * - 입력 : viewId, newState
   * - 출력 : x
   */
  applyRemote(viewId, newState) {
    var _a3;
    const panes = (_a3 = this.paneMap.get(viewId)) != null ? _a3 : [];
    if (panes.length === 0) return;
    const notePath = panes[0].notePath;
    const key = this.makeKey(notePath, viewId);
    const cur = this.get(notePath, viewId);
    if (JSON.stringify(cur) === JSON.stringify(newState)) return;
    localStorage.setItem(key, JSON.stringify(newState));
    this.emit(viewId, newState);
  }
  /**
   * * 4.8) makeKey
   * - 목적 : 상태 저장 키 문자열 생성
   * - 입력 : notePath, viewId
   * - 출력 : `coverTable::${notePath}::${viewId}` (string)
   */
  makeKey(notePath, viewId) {
    return `coverTable::${notePath}::${viewId}`;
  }
  /**
   * * 4.9) hasLivePane
   * - 목적 : 해당 viewId가 현재 DOM에 존재하는지 확인
   * - 입력 : vid
   * - 출력 : boolean
   */
  hasLivePane(vid) {
    var _a3;
    const arr = (_a3 = this.paneMap.get(vid)) != null ? _a3 : [];
    return arr.some((p) => p.leafEl && document.body.contains(p.leafEl));
  }
};
var tableState = new StateCenter();

// src/features/interactive-table/InteractiveTableModel.ts
function uuid() {
  return (crypto == null ? void 0 : crypto.randomUUID) ? crypto.randomUUID() : `vid-${Date.now().toString(36)}-${Math.random().toString(36).slice(2, 8)}`;
}
function gs(note, vid, k) {
  var _a3, _b;
  return (_b = (_a3 = tableState.get(note, vid)) == null ? void 0 : _a3[k]) != null ? _b : null;
}
function ss(note, vid, k, v) {
  const arr = tableState.paneMap.get(vid);
  const inst = arr == null ? void 0 : arr[0];
  if (inst) {
    const silent = !!inst.skipStateWrite;
    tableState.set(inst, { [k]: v }, false, silent);
    return;
  }
  const key = `coverTable::${note}::${vid}`;
  try {
    const data = JSON.parse(localStorage.getItem(key) || "{}");
    data[k] = v;
    localStorage.setItem(key, JSON.stringify(data));
  } catch (e) {
    localStorage.setItem(key, JSON.stringify({ [k]: v }));
  }
}
var InteractiveTableModel = class {
  /*──────── ctor ────────*/
  constructor(dv, pages, columns, ctx, settings, host) {
    this.filteredRows = [];
    /* ===========================================================
     * 2. 외부 노출 API
     * =========================================================== */
    /** 현재 뷰에 표시할 “페이지네이션 적용 후” 배열 */
    this.displayRows = [];
    /** 필터/검색/정렬 적용 전 전체 행 수 */
    this.totalRows = 0;
    /* ===========================================================
     * 5. 유틸 (날짜 파싱 / 정렬 값 계산 등)
     * =========================================================== */
    this.dateYMDRegex = /^(\d{4})-(\d{1,2})-(\d{1,2})$/;
    this.isoDateRegex = /^(\d{4})-(\d{2})-(\d{2})T/;
    this.timeHMRegex = /^(\d{1,2}):(\d{1,2})$/;
    var _a3;
    if (!(ctx == null ? void 0 : ctx.sourcePath)) throw new Error("ctx.sourcePath missing");
    this.dv = dv;
    this.pages = pages;
    this.columns = columns;
    this.ctx = ctx;
    this.settings = settings;
    this.notePath = ctx.sourcePath;
    this.host = host;
    this.viewId = (_a3 = settings.__viewId) != null ? _a3 : settings.__viewId = uuid();
    const leafEl = host.closest(".workspace-leaf");
    if (leafEl) {
      tableState.addPane({
        viewId: this.viewId,
        notePath: this.notePath,
        dv,
        settings,
        ctx,
        container: host,
        leafEl,
        rerender: async (p) => await this.compute(p),
        refreshView: async (p) => {
          var _a4;
          return await ((_a4 = settings.___refreshHook) == null ? void 0 : _a4.call(settings, p));
        }
      });
    } else {
      Log.w("[Cover-Table] workspace-leaf not found \u2013 skip pane registration");
    }
  }
  /** Model 내부 상태를 재계산하고 결과를 갱신한다. */
  async compute(passive = false) {
    var _a3;
    const cloned = this.pages.map((pg, idx) => {
      var _a4, _b, _c, _d, _e, _f, _g, _h;
      const cp = { ...pg, __idx: idx };
      cp.tags = Array.isArray(pg.tags) ? pg.tags : Array.isArray((_a4 = pg.file) == null ? void 0 : _a4.tags) ? pg.file.tags : pg.tags ? [pg.tags] : [];
      const dvPg = (() => {
        try {
          return this.dv.page(pg.file.path);
        } catch (e) {
          return null;
        }
      })();
      const baseName = (_c = (_b = pg.file) == null ? void 0 : _b.basename) != null ? _c : "";
      const fileTitle = baseName.endsWith(".excalidraw") ? baseName.slice(0, -".excalidraw".length) : baseName || "-";
      cp.__fmTitle = (_h = (_g = (_e = (_d = dvPg == null ? void 0 : dvPg.frontmatter) == null ? void 0 : _d.title) != null ? _e : dvPg == null ? void 0 : dvPg.title) != null ? _g : (_f = pg.frontmatter) == null ? void 0 : _f.title) != null ? _h : fileTitle;
      return cp;
    });
    let fine = await this.applyAllFilters(cloned);
    fine = this.applySort(fine);
    this.filteredRows = fine;
    this.totalRows = fine.length;
    const per = (_a3 = this.settings.perPage) != null ? _a3 : 10;
    this.displayRows = per > 0 ? this.paginate(fine, per, passive) : fine;
  }
  /* ===========================================================
   * 3. 필터 / 검색
   * =========================================================== */
  /** 전체 필터 (프론트매터 + 태그 + 검색) */
  async applyAllFilters(pages) {
    for (const col of this.columns.filter((c) => c.filter)) {
      pages = await this.filterByProp(col, pages);
    }
    pages = await this.applyTagFilter(pages);
    pages = this.applySearch(pages);
    return pages;
  }
  /** 프론트매터 프로퍼티 단일 필터 */
  async filterByProp(c, pages) {
    const key = `filter_${this.viewId}_${c.prop}`;
    const val = gs(this.notePath, this.viewId, key);
    if (!val || val === "ALL") return pages;
    const normalize = (raw) => {
      var _a3;
      switch (c.format) {
        case "date": {
          const ymd = this.normalizeYMD(raw);
          return ymd != null ? ymd : "-";
        }
        case "year": {
          const y = typeof raw === "number" ? String(raw) : (_a3 = String(raw).match(/\d{4}/)) == null ? void 0 : _a3[0];
          return y != null ? y : "-";
        }
        default:
          return String(raw != null ? raw : "-");
      }
    };
    return pages.filter((pg) => normalize(this.getVal(pg, c.prop)) === val);
  }
  /** 태그 필터 */
  async applyTagFilter(pages) {
    const tg = gs(this.notePath, this.viewId, `tagFilter_${this.viewId}`) || "ALL";
    if (tg === "ALL") return pages;
    return pages.filter((pg) => {
      var _a3, _b, _c;
      const arr = Array.isArray((_a3 = pg.file) == null ? void 0 : _a3.tags) ? pg.file.tags : Array.isArray(pg.tags) ? pg.tags : [(_c = (_b = pg.file) == null ? void 0 : _b.tags) != null ? _c : pg.tags];
      return arr.includes(tg);
    });
  }
  /** 텍스트 검색 */
  applySearch(pages) {
    const ready = gs(this.notePath, this.viewId, `search_ready_${this.viewId}`);
    if (!ready) return pages;
    const q = (gs(this.notePath, this.viewId, `search_${this.viewId}`) || "").trim().toLowerCase();
    if (!q) return pages;
    const cols = this.columns.filter((c) => c.column);
    pages.forEach((pg) => {
      const buf = [];
      cols.forEach((c) => {
        let tv = c.prop === "title_link" ? pg.__fmTitle || "" : String(this.getVal(pg, c.prop) || "");
        buf.push(tv.toLowerCase());
      });
      pg.__searchText = buf.join(" ");
    });
    return pages.filter(
      (pg) => q.split(" ").every((w) => w && (pg.__searchText || "").includes(w.toLowerCase()))
    );
  }
  /* ===========================================================
   * 4. 정렬 / 페이지네이션
   * =========================================================== */
  applySort(arr) {
    var _a3;
    const prop = gs(this.notePath, this.viewId, `sort_${this.viewId}`);
    const dir = gs(this.notePath, this.viewId, `sort_direction_${this.viewId}`);
    if (!prop || !dir) return arr.sort((a, b) => a.__idx - b.__idx);
    if (!prop) return arr.sort((a, b) => a.__idx - b.__idx);
    const col = this.columns.find((c) => c.prop === prop);
    const fmt = (_a3 = col == null ? void 0 : col.format) != null ? _a3 : "text";
    return arr.sort((a, b) => {
      const A = this.getSortValue(this.getVal(a, prop), fmt);
      const B = this.getSortValue(this.getVal(b, prop), fmt);
      const cmp = typeof A === "number" && typeof B === "number" ? A - B : JSON.stringify(A).localeCompare(JSON.stringify(B), "ko");
      return dir === "asc" ? cmp : -cmp;
    });
  }
  paginate(arr, per, passive) {
    var _a3;
    const key = `pagination_${this.viewId}`;
    const total = per > 0 ? Math.ceil(arr.length / per) : 1;
    let idx = (_a3 = gs(this.notePath, this.viewId, key)) != null ? _a3 : 0;
    if (total === 0) idx = 0;
    else {
      if (idx < 0) idx = 0;
      if (idx >= total) idx = total - 1;
    }
    if (!passive && idx !== gs(this.notePath, this.viewId, key))
      ss(this.notePath, this.viewId, key, idx);
    return per > 0 ? arr.slice(idx * per, (idx + 1) * per) : [...arr];
  }
  parseDateYMD(str) {
    if (typeof str !== "string") return null;
    const m = str.match(this.dateYMDRegex);
    if (!m) return null;
    const y = +m[1], mo = +m[2], d = +m[3];
    if (y < 1e3 || y > 9999 || mo < 1 || mo > 12 || d < 1 || d > 31) return null;
    return new Date(y, mo - 1, d);
  }
  /** ISO(yyyy-mm-ddThh…)·short(yyyy-m-d) → "yyyy-m-d" */
  normalizeYMD(str) {
    if (!str) return null;
    const s = String(str).split("T")[0];
    const m = s.match(/^(\d{4})-(\d{1,2})-(\d{1,2})$/);
    if (!m) return null;
    return `${+m[1]}-${+m[2]}-${+m[3]}`;
  }
  parseTimeHM(str) {
    if (typeof str !== "string") return null;
    const m = str.match(this.timeHMRegex);
    if (!m) return null;
    const hh = +m[1], mm = +m[2];
    if (hh > 23 || mm > 59) return null;
    const dt = /* @__PURE__ */ new Date();
    dt.setHours(hh, mm, 0, 0);
    return dt;
  }
  /** v 값과 format 을 받아 정렬용 프리미티브 반환 */
  /** 정렬용 Key 생성 ─ 모든 format 공통 */
  getSortValue(v, fmt = "text") {
    var _a3, _b;
    if (v == null) return fmt === "num" ? 0 : [99, "", ""];
    switch (fmt) {
      case "num": {
        const n = Number(v);
        return isNaN(n) ? 0 : n;
      }
      case "date": {
        let s = String(v);
        if (this.isoDateRegex.test(s)) s = s.slice(0, 10);
        const d = this.parseDateYMD(s);
        return d ? d.getTime() : 0;
      }
      case "year": {
        const y = (_a3 = String(v).match(/\d{4}/)) == null ? void 0 : _a3[0];
        return y ? Number(y) : 0;
      }
      case "tags": {
        const first = normalizeTags(v).sort((a, b) => a.localeCompare(b, "ko"))[0];
        return first != null ? first : "";
      }
      default: {
        const raw = String(v != null ? v : "");
        const base = raw.normalize("NFKD").replace(/[\u0300-\u036F]/g, "").replace(/[#*_`~\[\]\(\)\{\}<>\-]/g, "").trim().toLowerCase();
        const ch = (_b = base[0]) != null ? _b : "";
        const grp = /[a-z]/.test(ch) ? 0 : /[가-힣]/.test(ch) ? 1 : /\d/.test(ch) ? 2 : /\p{Extended_Pictographic}/u.test(ch) ? 4 : 3;
        return [grp, base, raw];
      }
    }
  }
  formatAsDate(v) {
    if (v == null) return "";
    const d = this.parseDateYMD(String(v));
    if (!d) return String(v);
    const y = d.getFullYear(), m = d.getMonth() + 1, dd = d.getDate();
    return `${y}-${m < 10 ? "0" : ""}${m}-${dd < 10 ? "0" : ""}${dd}`;
  }
  getVal(p, prop) {
    return prop.startsWith("file.") ? prop.split(".").reduce((v, k) => v == null ? void 0 : v[k], p) : p[prop];
  }
};

// src/core/events/EventBus.ts
var import_obsidian6 = require("obsidian");
var _EventBus = class _EventBus {
  constructor(app) {
    this.ctrlSet = /* @__PURE__ */ new Set();
    /* ── 내부: debounced broadcast ── */
    this.debounce = (fn, ms = 150) => {
      let t = null;
      return (...a) => {
        if (t) clearTimeout(t);
        t = window.setTimeout(() => fn(...a), ms);
      };
    };
    this.broadcast = this.debounce((file) => {
      this.ctrlSet.forEach((cb) => cb(file));
    }, 150);
    this.app = app;
    this.attachVaultHooks();
    this.attachWorkspaceHooks();
  }
  static get i() {
    return _EventBus._inst;
  }
  emit(file) {
    this.broadcast(file);
  }
  /* ── 초기화: 플러그인 onload() 시 호출 ── */
  static init(app) {
    if (!_EventBus._inst) _EventBus._inst = new _EventBus(app);
  }
  /* ── Controller 가 자신의 refresh 콜백을 등록 / 해제 ── */
  on(cb) {
    this.ctrlSet.add(cb);
  }
  off(cb) {
    this.ctrlSet.delete(cb);
  }
  /* ── Vault / Metadata / Workspace Hooks ── */
  attachVaultHooks() {
    const v = this.app.vault;
    ["modify", "delete", "rename", "create"].forEach(
      (ev) => v.on(ev, (f) => {
        if (f instanceof import_obsidian6.TFile) this.broadcast(f);
      })
    );
    this.app.metadataCache.on("resolved", () => this.broadcast());
  }
  attachWorkspaceHooks() {
    this.app.workspace.on("layout-change", () => this.broadcast());
    this.app.workspace.on(
      "active-leaf-change",
      () => setTimeout(() => this.broadcast(), 100)
      // ← 0.1 s delay
    );
  }
  /** 👈 ➊ 외부에서 강제로 새로 고침을 요청할 때 사용 */
  forceRefresh(file) {
    Log.d("[CT] EventBus.forceRefresh()");
    this.broadcast(file);
  }
};
_EventBus._inst = null;
var EventBus = _EventBus;

// src/features/interactive-table/InteractiveTableController.ts
function gs2(note, vid, k) {
  var _a3, _b;
  return (_b = (_a3 = tableState.get(note, vid)) == null ? void 0 : _a3[k]) != null ? _b : null;
}
function ss2(note, vid, k, v) {
  const list = tableState.paneMap.get(vid);
  const inst = list == null ? void 0 : list[0];
  if (inst) {
    const silent = !!inst.skipStateWrite;
    tableState.set(inst, { [k]: v }, false, silent);
    return;
  }
  const key = `coverTable::${note}::${vid}`;
  try {
    const data = JSON.parse(localStorage.getItem(key) || "{}");
    data[k] = v;
    localStorage.setItem(key, JSON.stringify(data));
  } catch (e) {
    localStorage.setItem(key, JSON.stringify({ [k]: v }));
  }
}
function todayYMD() {
  const d = /* @__PURE__ */ new Date();
  const y = d.getFullYear();
  const m = d.getMonth() + 1;
  const dd = d.getDate();
  return `${y}-${m < 10 ? "0" : ""}${m}-${dd < 10 ? "0" : ""}${dd}`;
}
function injectCreated(page) {
  if (!page.created || page.created === "-") {
    const today = todayYMD();
    return { ...page, created: today, frontmatter: { ...page.frontmatter, created: today } };
  }
  return page;
}
function epochToYMD(ms) {
  const d = new Date(ms);
  const y = d.getFullYear();
  const m = d.getMonth() + 1;
  const dd = d.getDate();
  return `${y}-${m < 10 ? "0" : ""}${m}-${dd < 10 ? "0" : ""}${dd}`;
}
var InteractiveTableController = class {
  // rerender(passive) → 상태 재저장 차단
  /*──────── ctor ────────*/
  constructor(app) {
    this.app = app;
    this.models = /* @__PURE__ */ new Map();
    this._rendering = false;
    this.skipStateWrite = false;
    /*───────────────────────────────────────────────
      탭 헤더(click) → 모든 cover-view 강제 rerender
    ───────────────────────────────────────────────*/
    this.handleWorkspaceTabClick = (e) => {
      const header = e.target.closest(".workspace-tab-header.tappable");
      if (!header) return;
      document.querySelectorAll("[data-cover-view]").forEach((el) => {
        const vid = el.dataset.coverView;
        if (this.models.has(vid)) {
          this.rerender(true, vid);
          return;
        }
        const mdl = [...this.models.values()].find((m) => !m["host"].isConnected);
        if (mdl) this.rerender(true, mdl["viewId"]);
      });
    };
    this.dateYMDRegex = /^(\d{4})-(\d{1,2})-(\d{1,2})$/;
    this.timeHMRegex = /^(\d{1,2}):(\d{1,2})$/;
    this.svc = new TableController(app);
    const busCb = (file) => this.refreshByBus(file);
    EventBus.i.on(busCb);
    this.__cover_unload__ = () => EventBus.i.off(busCb);
    this.cb = {
      /* 상태 */
      getState: gs2,
      setState: ss2,
      getLocalState: (n, v) => tableState.get(n, v),
      /* 유틸 */
      getVal: (pg, prop) => this.svc.getVal(pg, prop),
      parseDateYMD: (s) => this.svc.parseDateYMD(s),
      formatAsDate: (v) => this.svc.formatAsDate(v),
      getSortValue: (v) => this.svc.getSortValue(v),
      suggester: (vals) => this.svc.suggester(vals),
      /* 렌더 */
      rerender: async () => {
        await this.rerender(true);
      },
      sync: async (note, vid, key, val) => {
        ss2(note, vid, key, val);
        await this.rerender(true, vid);
      },
      /* 전체 상태 초기화 */
      resetState: async () => {
      }
    };
    this.ui = new UIManager(app, this.cb);
    this.app.workspace.containerEl.addEventListener(
      "click",
      (evt) => {
        if (!evt.target.closest(".workspace-tab-header.tappable")) return;
        setTimeout(() => {
          var _a3, _b, _c, _d, _e, _f, _g, _h;
          const host = (_d = (_c = (_b = (_a3 = this.app.workspace.activeLeaf) == null ? void 0 : _a3.view) == null ? void 0 : _b.containerEl) == null ? void 0 : _c.querySelector) == null ? void 0 : _d.call(_c, "[data-cover-view]");
          if (!host) return;
          const vid = host.dataset.coverView;
          const note = (_h = (_g = (_f = (_e = this.app.workspace.activeLeaf) == null ? void 0 : _e.view) == null ? void 0 : _f.file) == null ? void 0 : _g.path) != null ? _h : "";
          this.cb.sync(
            note,
            // notePath
            vid,
            // viewId
            // 아무 filter key 나 하나 골라 “ALL” 로 던지면 기존 로직이 rerender
            `tagFilter_${vid}`,
            // ← 존재하는 키
            "ALL"
          );
        }, 180);
      },
      true
      // capture
    );
  }
  /* ===========================================================
   *  renderAutoView()
   * -----------------------------------------------------------
   *  • Dataview API(dv) 와 settings 를 받아 자동으로 폴더 자료
   *    (md + canvas) 를 수집하고 테이블을 렌더
   *  • passive = true → 상태(localStorage) 재저장 차단
   * =========================================================== */
  async renderAutoView(dv, _settings = {}, ctx, hostPre, passive = false) {
    var _a3, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k;
    const settings = { ..._settings };
    if (settings.perPage == null) {
      const legacyPer = (_b = (_a3 = _settings["entries on page"]) != null ? _a3 : _settings.entries_on_page) != null ? _b : _settings.entriesOnPage;
      if (legacyPer != null) settings.perPage = Number(legacyPer) || 0;
    }
    const c = ctx;
    const notePath = (ctx == null ? void 0 : ctx.sourcePath) || "";
    if (this._rendering) return;
    this._rendering = true;
    if (passive) this.skipStateWrite = true;
    let model = null;
    try {
      if (!(ctx == null ? void 0 : ctx.sourcePath) || !hostPre) return;
      if (!hostPre.dataset.coverVid) {
        hostPre.dataset.coverVid = crypto.randomUUID();
        settings.__wipeState = true;
      } else {
        settings.__wipeState = false;
      }
      settings.__viewId = hostPre.dataset.coverVid;
      settings._notePath = ctx.sourcePath;
      const savedPerPage = gs2(notePath, settings.__viewId, "perPage");
      if (typeof savedPerPage === "number" && savedPerPage > 0) {
        settings.perPage = savedPerPage;
      }
      const folder = (_c = settings.path) != null ? _c : ctx.sourcePath.substring(0, ctx.sourcePath.lastIndexOf("/"));
      const mdPages = dv.pages().where((p) => p.file.folder === folder).where((p) => !this.isFolderNote(p)).map((p) => {
        var _a4;
        return injectCreated({
          // ← 여기
          ...p,
          file: { ...p.file, basename: (_a4 = p.file.basename) != null ? _a4 : p.file.name }
        });
      }).array();
      const canvasPages = this.app.vault.getFiles().filter((f) => f.extension === "canvas" && f.path.startsWith(folder + "/")).map((f) => {
        const ctime = epochToYMD(f.stat.ctime);
        return {
          file: { path: f.path, link: dv.fileLink(f.path), folder, basename: f.basename },
          frontmatter: { title: f.basename },
          created: ctime,
          // ← 최초 생성일
          tags: "#canvas"
        };
      });
      const excaliPages = this.app.vault.getFiles().filter((f) => f.extension === "md" && f.basename.endsWith(".excalidraw") && f.path.startsWith(folder + "/")).map((f) => {
        const ctime = epochToYMD(f.stat.ctime);
        return {
          file: { path: f.path, link: dv.fileLink(f.path), folder, basename: f.basename },
          frontmatter: { title: f.basename.replace(/\.excalidraw$/, "") },
          created: ctime,
          // ← 최초 생성일
          tags: "#excalidraw"
        };
      });
      const allPages = [...mdPages, ...canvasPages, ...excaliPages];
      const mustTitle = { prop: "__fmTitle", name: "Title", filter: false, column: true, format: "text" };
      const mustTags = { prop: "tags", name: "Tags", filter: false, column: true, format: "tags" };
      const custom = Array.isArray(settings.props) ? settings.props : [];
      const columns = [
        mustTitle,
        ...custom.filter((p) => !["title_link", "tags"].includes(p.prop)).map((p) => {
          var _a4, _b2, _c2;
          return {
            ...p,
            filter: (_a4 = p.filter) != null ? _a4 : true,
            column: (_b2 = p.column) != null ? _b2 : true,
            format: (_c2 = p.format) != null ? _c2 : "text"
          };
        }),
        mustTags
      ];
      settings.___refreshHook = async (p = false) => {
        await this.renderAutoView(dv, settings, ctx, hostPre, p);
      };
      model = new InteractiveTableModel(
        dv,
        allPages,
        columns,
        ctx,
        settings,
        hostPre
      );
      hostPre.setAttribute("data-cover-view", model["viewId"]);
      this.models.set(model["viewId"], model);
      await model.compute(passive);
      const fmCandidates = columns.filter((c2) => c2.filter).map((c2) => {
        const vals = [...new Set(
          model.filteredRows.map((r) => {
            var _a4;
            const raw = this.svc.getVal(r, c2.prop);
            switch (c2.format) {
              case "date": {
                const ymd = model.normalizeYMD(raw);
                return ymd != null ? ymd : "-";
              }
              case "year": {
                const y = typeof raw === "number" ? String(raw) : (_a4 = String(raw).match(/\d{4}/)) == null ? void 0 : _a4[0];
                return y != null ? y : "-";
              }
              default:
                return String(raw != null ? raw : "-");
            }
          })
        )].sort((a, b) => String(a).localeCompare(String(b)));
        return { prop: c2.prop, values: ["ALL", ...vals] };
      });
      const tagCandidates = (() => {
        const set = /* @__PURE__ */ new Set();
        model.filteredRows.forEach(
          (r) => {
            var _a4, _b2, _c2;
            return (Array.isArray((_a4 = r.file) == null ? void 0 : _a4.tags) ? r.file.tags : Array.isArray(r.tags) ? r.tags : [(_c2 = (_b2 = r.file) == null ? void 0 : _b2.tags) != null ? _c2 : r.tags]).forEach((t) => set.add(t));
          }
        );
        return set.size ? ["ALL", ...[...set].sort()] : null;
      })();
      const fmFilters = columns.filter((c2) => c2.filter).map((c2) => {
        const vals = [...new Set(
          model.filteredRows.map((pg) => {
            var _a4;
            const raw = this.svc.getVal(pg, c2.prop);
            switch (c2.format) {
              case "date": {
                const ymd = model.normalizeYMD(raw);
                return ymd != null ? ymd : "-";
              }
              case "year": {
                const y = typeof raw === "number" ? String(raw) : (_a4 = String(raw).match(/\d{4}/)) == null ? void 0 : _a4[0];
                return y != null ? y : "-";
              }
              default:
                return String(raw != null ? raw : "-");
            }
          })
        )].sort((a, b) => String(a).localeCompare(String(b)));
        return { prop: c2.prop, values: ["ALL", ...vals] };
      });
      const tagSet = /* @__PURE__ */ new Set();
      model.filteredRows.forEach((pg) => {
        var _a4, _b2, _c2;
        ((_c2 = (_b2 = (_a4 = pg.file) == null ? void 0 : _a4.tags) != null ? _b2 : pg.tags) != null ? _c2 : []).forEach((t) => tagSet.add(t));
      });
      const tagFilter = tagSet.size ? ["ALL", ...[...tagSet].sort()] : null;
      const scopedCb = this.makeScopedCb(settings._notePath, model["viewId"]);
      await this.ui.buildView(
        hostPre,
        settings._notePath,
        model["viewId"],
        model.displayRows,
        columns,
        (_d = settings.perPage) != null ? _d : 10,
        model.totalRows,
        {
          showOpenFolderButton: (_e = settings.showOpenFolderButton) != null ? _e : true,
          showNewNoteButton: (_f = settings.showNewNoteButton) != null ? _f : true,
          showTagFilterButton: (_g = settings.showTagFilterButton) != null ? _g : true,
          showFrontmatterFilterButton: (_h = settings.showFrontmatterFilterButton) != null ? _h : true,
          showSearchBox: (_i = settings.showSearchBox) != null ? _i : true,
          showRefreshButton: (_j = settings.showRefreshButton) != null ? _j : true,
          folderPath: (_k = settings.path) != null ? _k : null
        },
        fmCandidates,
        // ← ③-B 에서 만든 front-matter 후보
        tagCandidates,
        // ← 태그 후보 (없으면 null)
        scopedCb
        // ★ 마지막 인수로 콜백 전달
      );
    } finally {
      this.skipStateWrite = false;
      this._rendering = false;
    }
  }
  /* ===========================================================
   *  rerender(passive) – 현재 Model 재계산 & UI만 갱신
   * =========================================================== */
  async rerender(passive = false, vid) {
    var _a3, _b, _c, _d, _e, _f;
    Log.d(`[CT] rerender(${vid != null ? vid : "auto"}) \u25B6 passive=${passive}`);
    while (this._rendering) {
      await new Promise((r) => setTimeout(r, 15));
    }
    let model = vid ? this.models.get(vid) : (() => {
      var _a4, _b2;
      const host = (_b2 = (_a4 = event == null ? void 0 : event.target) == null ? void 0 : _a4.closest) == null ? void 0 : _b2.call(_a4, "[data-cover-view]");
      const hvid = host ? host.dataset.coverView : null;
      return hvid ? this.models.get(hvid) : [...this.models.values()].pop();
    })();
    if (!model && vid) {
      const host = document.querySelector(
        `[data-cover-view="${vid}"]`
      );
      if (host) {
        const dvApi = (_c = (_b = (_a3 = this.app.plugins) == null ? void 0 : _a3.plugins) == null ? void 0 : _b.dataview) == null ? void 0 : _c.api;
        if (dvApi) {
          const mc = this.app.metadataCache;
          if (!mc.resolved) {
            await new Promise((res) => {
              var _a4;
              return (_a4 = mc.once) == null ? void 0 : _a4.call(mc, "resolved", res);
            });
          }
          await this.renderAutoView(
            dvApi,
            // ← Dataview
            {},
            // 빈 settings
            {
              sourcePath: (_f = (_e = (_d = host.closest(".markdown-preview-view")) == null ? void 0 : _d.file) == null ? void 0 : _e.path) != null ? _f : ""
            },
            // 최소 ctx
            host,
            // hostPre
            true
            // passive=true (상태 보존)
          );
          model = this.models.get(vid);
        }
      }
    }
    if (model) {
      const pp = gs2(model["settings"]._notePath, model["viewId"], "perPage");
      if (typeof pp === "number" && pp > 0) model["settings"].perPage = pp;
    }
    if (model && !document.body.contains(model["host"])) {
      const fresh = document.querySelector(
        `[data-cover-view="${model["viewId"]}"]`
      );
      if (fresh) {
        model["host"] = fresh;
      } else {
        this.models.delete(model["viewId"]);
        model = void 0;
      }
    }
    if (!model) {
      Log.d("[CT] rerender \u2013 model not found -> abort");
      return;
    }
    Log.time(`[CT] compute+render ${vid}`);
    await model.compute(passive);
    await this.renderAutoView(
      model["dv"],
      model["settings"],
      model["ctx"],
      model["host"],
      passive
    );
    Log.timeEnd(`[CT] compute+render ${vid}`);
    const keeping = model["viewId"];
    setTimeout(() => {
      this.models.forEach((m, id) => {
        if (id === keeping) return;
        if (!document.body.contains(m.host)) this.models.delete(id);
      });
    }, 300);
  }
  /* ===========================================================
   *  📦  Util (날짜 파싱 / 정렬 값 등)
   * =========================================================== */
  /** Dataview Page → 임의 값 (누락 때문에 생긴 TypeError 수정) */
  getVal(page, prop) {
    var _a3, _b, _c, _d;
    if (prop === "__fmTitle") {
      const fmTitle = (_b = (_a3 = page == null ? void 0 : page.frontmatter) == null ? void 0 : _a3.title) != null ? _b : page == null ? void 0 : page.title;
      if (fmTitle && String(fmTitle).trim() !== "") return fmTitle;
      const base = (_d = (_c = page == null ? void 0 : page.file) == null ? void 0 : _c.basename) != null ? _d : "";
      return base.replace(/\.excalidraw$/, "");
    }
    return prop.startsWith("file.") ? prop.split(".").reduce((v, k) => v == null ? void 0 : v[k], page) : page[prop];
  }
  parseDateYMD(str) {
    if (typeof str !== "string") return null;
    const m = str.match(this.dateYMDRegex);
    if (!m) return null;
    const y = +m[1], mo = +m[2], d = +m[3];
    if (y < 1e3 || y > 9999 || mo < 1 || mo > 12 || d < 1 || d > 31) return null;
    return new Date(y, mo - 1, d);
  }
  parseTimeHM(str) {
    if (typeof str !== "string") return null;
    const m = str.match(this.timeHMRegex);
    if (!m) return null;
    const hh = +m[1], mm = +m[2];
    if (hh > 23 || mm > 59) return null;
    const dt = /* @__PURE__ */ new Date();
    dt.setHours(hh, mm, 0, 0);
    return dt;
  }
  formatAsDate(v) {
    if (v == null) return "";
    const d = this.parseDateYMD(String(v));
    if (!d) return String(v);
    const y = d.getFullYear(), m = d.getMonth() + 1, dd = d.getDate();
    return `${y}-${m < 10 ? "0" : ""}${m}-${dd < 10 ? "0" : ""}${dd}`;
  }
  getSortValue(v) {
    if (v == null) return "";
    const s = typeof v === "string" ? v : String(v);
    const d = this.parseDateYMD(s) || this.parseTimeHM(s);
    if (d) return d.getTime();
    const n = parseFloat(s);
    return isNaN(n) ? s.toLowerCase() : n;
  }
  async suggester(values) {
    return this.svc.suggester(values);
  }
  /* ===========================================================
   *  🔍 Helper – “folder Note” 여부
   * =========================================================== */
  isFolderNote(p) {
    var _a3, _b;
    const f = p == null ? void 0 : p.file;
    if (!(f == null ? void 0 : f.path) || f.folder == null) return false;
    const base = (_a3 = f.basename) != null ? _a3 : f.path.substring(
      f.path.lastIndexOf("/") + 1,
      f.path.lastIndexOf(".")
    );
    const folderName = (_b = f.folder.split("/").pop()) != null ? _b : "";
    return base === folderName;
  }
  /** 현재 note + view 에 바인딩된 콜백 생성 */
  makeScopedCb(note, vid) {
    return {
      ...this.cb,
      // 기존 기능 재사용
      rerender: async (_n = note, _v = vid) => {
        await this.rerender(true, _v);
      },
      sync: async (_, __, key, val) => {
        ss2(note, vid, key, val);
        await this.rerender(true, vid);
      },
      getState: (n, v, k) => gs2(n != null ? n : note, v != null ? v : vid, k),
      setState: (n, v, k, val) => ss2(n != null ? n : note, v != null ? v : vid, k, val)
    };
  }
  /* ===========================================================
   *  Global EventBus → passive rerender (FINAL & STABLE)
   * ========================================================= */
  refreshByBus(file) {
    var _a3, _b;
    const renderDebounced = /* @__PURE__ */ (() => {
      let t = null;
      return () => {
        if (t) clearTimeout(t);
        t = window.setTimeout(() => {
          this.models.forEach((_, vid) => this.rerender(true, vid));
        }, 80);
      };
    })();
    if (file && this.models.size) {
      const first = this.models.values().next().value;
      if (first) {
        const folder = (_a3 = first["settings"].path) != null ? _a3 : first["ctx"].sourcePath.replace(/\/[^/]+$/, "");
        if (!file.path.startsWith(folder + "/")) return;
      }
    }
    if (!this.models.size) {
      document.querySelectorAll("[data-cover-view]").forEach((h) => {
        const vid = h.dataset.coverView;
        if (!this.models.has(vid)) {
        }
      });
    }
    if (file) {
      const mc = this.app.metadataCache;
      const parsed = ((_b = mc.getFileCache(file)) == null ? void 0 : _b.frontmatter) != null;
      if (!parsed) {
        const ref = mc.on("resolved", () => {
          mc.offref(ref);
          renderDebounced();
        });
        return;
      }
    }
    renderDebounced();
  }
};

// src/features/gantt/palette.ts
var DEFAULT_DARK = [
  "#ff6363",
  "#ffa600",
  "#ffcf00",
  "#8aff80",
  "#2effd3",
  "#00ffff",
  "#25c6fc",
  "#3399ff",
  "#9975e2",
  "#cc66cc",
  "#ff66ff",
  "#ff66cc",
  "#ff6699",
  "#ff6666",
  "#f06b60",
  "#ed7732",
  "#de9f00",
  "#afff68",
  "#53ffb4",
  "#2f9eff"
];
var DEFAULT_LIGHT = [
  "#ff9999",
  "#ffc04d",
  "#ffe680",
  "#b3ffb3",
  "#80fff2",
  "#80ffff",
  "#99daff",
  "#99c2ff",
  "#c2a3e8",
  "#df9edf",
  "#ff99ff",
  "#ff99e6",
  "#ff99c2",
  "#ff9999",
  "#f4a38c",
  "#f1b066",
  "#eec900",
  "#c5ff8a",
  "#84ffc9",
  "#74baff"
];
function pickPalette(isDark, opts = {}) {
  var _a3, _b;
  const { colorPalette, colorPaletteDark, colorPaletteLight } = opts;
  if (isDark) {
    return ((_a3 = colorPaletteDark != null ? colorPaletteDark : colorPalette) != null ? _a3 : DEFAULT_DARK).slice();
  }
  return ((_b = colorPaletteLight != null ? colorPaletteLight : colorPalette) != null ? _b : DEFAULT_LIGHT).slice();
}
var GanttPalette = class {
  constructor(palette) {
    this.palette = palette;
    this.noteColorMap = {};
    this.colorPtr = 0;
  }
  /** 노트 이름을 팔레트에 등록(이미 등록되어 있으면 무시) */
  assign(note) {
    if (this.noteColorMap[note]) return;
    if (this.palette.length === 0) {
      this.noteColorMap[note] = { colorIndex: null };
      return;
    }
    const idx = this.colorPtr % this.palette.length;
    this.noteColorMap[note] = { colorIndex: idx };
    this.colorPtr++;
  }
  /** 등록된 노트 이름의 색상을 반환(없으면 기본 #999) */
  colorOf(note) {
    const entry = this.noteColorMap[note];
    if (!entry || entry.colorIndex == null) return "#999";
    return this.palette[entry.colorIndex];
  }
  /** 현재 매핑 정보를 객체 형태({ note: hex })로 반환 */
  legend() {
    const res = {};
    Object.keys(this.noteColorMap).forEach((note) => {
      res[note] = this.colorOf(note);
    });
    return res;
  }
  /** 전체 매핑‧색상 포인터 초기화 */
  reset() {
    this.colorPtr = 0;
    Object.keys(this.noteColorMap).forEach((k) => delete this.noteColorMap[k]);
  }
};

// src/features/gantt/GanttModel.ts
var GanttModel = class {
  /*──────── ctor ────────*/
  constructor(app, dv, settings = {}, ctx) {
    var _a3, _b, _c, _d, _e, _f;
    (_a3 = settings.statusField) != null ? _a3 : settings.statusField = "obsidianUIMode";
    (_b = settings.statusDoneValue) != null ? _b : settings.statusDoneValue = "preview";
    (_c = settings.excludeDone) != null ? _c : settings.excludeDone = true;
    (_d = settings.startField) != null ? _d : settings.startField = "created";
    (_e = settings.endField) != null ? _e : settings.endField = "end";
    this.app = app;
    this.dv = dv;
    this.settings = settings;
    this.isDark = document.body.classList.contains("theme-dark");
    this.palette = pickPalette(this.isDark, settings);
    this.gPalette = new GanttPalette(this.palette);
    if (!((_f = dv.current) == null ? void 0 : _f.call(dv)) && (ctx == null ? void 0 : ctx.sourcePath))
      dv.current = () => dv.page(ctx.sourcePath);
  }
  /* ===========================================================
   *  compute() – 모든 계산 수행 후 DataPack 반환
   * =========================================================== */
  compute() {
    const { pages, year, month, daysInMonth } = this.collectPages();
    const legend = this.gPalette.legend();
    return {
      pages,
      year,
      month,
      daysInMonth,
      legend,
      palette: [...this.palette],
      // 방어적 복사
      startField: this.settings.startField,
      endField: this.settings.endField
    };
  }
  /*───────────────────────────────────────────────────────────────
    2-A. 페이지 수집 + 필터
  ──────────────────────────────────────────────────────────────*/
  collectPages() {
    var _a3, _b;
    const now = /* @__PURE__ */ new Date();
    const year = now.getFullYear();
    const month = now.getMonth();
    const daysInMonth = new Date(year, month + 1, 0).getDate();
    const cur = (_b = (_a3 = this.dv).current) == null ? void 0 : _b.call(_a3);
    const base = Array.isArray(this.settings.customPages) ? this.settings.customPages : this.settings.path ? this.dv.pages(`"${this.settings.path}"`).array() : (cur == null ? void 0 : cur.file) ? this.dv.pages().where(
      (p) => p.file.folder === cur.file.folder && p.file.path !== cur.file.path
    ).array() : [];
    const sKey = this.settings.statusField;
    const doneV = this.settings.statusDoneValue.toLowerCase();
    const excl = this.settings.excludeDone !== false;
    const sField = this.settings.startField;
    const eField = this.settings.endField;
    const pages = base.filter((p) => {
      var _a4;
      if (excl) {
        const stat = ((_a4 = p[sKey]) != null ? _a4 : "").toString().toLowerCase();
        if (stat === doneV) return false;
      }
      return !!p[sField] && !!p[eField];
    });
    pages.forEach((pg) => {
      var _a4;
      const title = pg.title || ((_a4 = pg.file) == null ? void 0 : _a4.name) || "Untitled";
      this.gPalette.assign(title);
    });
    return { pages, year, month, daysInMonth };
  }
  /*───────────────────────────────────────────────────────────────
    2-B. 셀 색상 판단 헬퍼
    Controller → UI 단계에서 td 마다 호출해 배경색 결정
  ──────────────────────────────────────────────────────────────*/
  /**
   * note 제목과 날짜(1-based) → 팔레트 색상 or null
   * Controller → UIManager.colorize() 에서 사용
   */
  colorFor(note, day, pack) {
    var _a3, _b;
    const { pages, year, month, startField, endField } = pack;
    const pg = pages.find((p) => {
      var _a4;
      return (p.title || ((_a4 = p.file) == null ? void 0 : _a4.name) || "Untitled") === note;
    });
    if (!pg) return null;
    const sDate = (_a3 = this.dv.date(pg[startField])) == null ? void 0 : _a3.toJSDate();
    const eDate = (_b = this.dv.date(pg[endField])) == null ? void 0 : _b.toJSDate();
    if (!sDate || !eDate) return null;
    const cur = new Date(year, month, day);
    if (cur >= sDate && cur <= eDate)
      return this.gPalette.colorOf(note);
    return null;
  }
};

// src/ui/gantt/GanttUIManager.ts
var GanttUIManager = class {
  /** build wrapper, inject table + legend, return container */
  buildGantt(host, headerText, tableHTML, legend, showLegend = true, showDivider = false) {
    const wrap = document.createElement("div");
    wrap.className = "gantt-view";
    const h = document.createElement("div");
    h.className = "gantt-month-year";
    h.textContent = headerText;
    wrap.appendChild(h);
    const container = document.createElement("div");
    container.className = "gantt-container";
    container.innerHTML = tableHTML;
    wrap.appendChild(container);
    if (showLegend) {
      const lg = document.createElement("div");
      lg.className = "gantt-legend";
      Object.entries(legend).forEach(([note, color]) => {
        const item = document.createElement("div");
        item.className = "gantt-legend-item";
        const sw = document.createElement("span");
        sw.className = "gantt-legend-color";
        sw.style.background = color;
        item.appendChild(sw);
        const lbl = document.createElement("span");
        lbl.textContent = note;
        item.appendChild(lbl);
        lg.appendChild(item);
      });
      wrap.appendChild(lg);
    }
    host.appendChild(wrap);
    return wrap;
  }
  /** cell painter – controller supplies callback */
  colorize(fn, isEdge) {
    document.querySelectorAll(".gantt-table td[data-note]").forEach((td) => {
      const note = td.dataset.note;
      const day = Number(td.dataset.day);
      const col = fn(note, day);
      if (col) {
        td.style.setProperty("--gantt-color", col);
        td.classList.add("is-filled");
      } else {
        td.classList.remove("is-filled");
        td.style.removeProperty("--gantt-color");
      }
      const edge = isEdge(note, day);
      if (edge) td.classList.add(`gantt-${edge}`);
    });
  }
  /** highlight today column */
  highlightToday() {
    const d = (/* @__PURE__ */ new Date()).getDate();
    document.querySelectorAll(`.gantt-table td[data-day='${d}']`).forEach((td) => td.classList.add("is-today"));
  }
};

// src/features/gantt/GanttController.ts
var GanttController = class {
  constructor(app) {
    this.app = app;
    this.ui = new GanttUIManager();
    this._rendering = false;
  }
  /*=============================================================
   *  renderView()
   * ------------------------------------------------------------
   *  @param dv        Dataview API
   *  @param settings  코드펜스 옵션 (GanttSettings)
   *  @param ctx       MarkdownPostProcessorContext
   *  @param hostPre   ```dataviewjs``` <pre> 엘리먼트
   *===========================================================*/
  async renderView(dv, settings = {}, ctx, hostPre) {
    var _a3, _b, _c, _d, _e, _f, _g;
    if (this._rendering) return;
    this._rendering = true;
    try {
      (_a3 = settings.renderInteractiveBelow) != null ? _a3 : settings.renderInteractiveBelow = true;
      (_b = settings.showLegend) != null ? _b : settings.showLegend = true;
      (_c = settings.forceInteractiveBelow) != null ? _c : settings.forceInteractiveBelow = false;
      if (settings.forceInteractiveBelow) settings.renderInteractiveBelow = true;
      let cur = (_d = dv.current) == null ? void 0 : _d.call(dv);
      if ((!cur || !cur.file) && (ctx == null ? void 0 : ctx.sourcePath)) cur = dv.page(ctx.sourcePath);
      if (!(cur == null ? void 0 : cur.file)) {
        Log.w("[Gantt] current page not found \u2013 abort");
        return;
      }
      const origCurrent = dv.current;
      dv.current = () => cur;
      const model = new GanttModel(this.app, dv, settings, ctx);
      const pack = model.compute();
      let host;
      if (hostPre) {
        host = hostPre;
      } else {
        host = dv.container;
      }
      const monthName = new Intl.DateTimeFormat("en", {
        month: "long"
      }).format(new Date(pack.year, pack.month, 1));
      const headerText = `${monthName} ${pack.year}`;
      const wrap = this.ui.buildGantt(
        host,
        headerText,
        this.buildTableHTML(pack),
        pack.legend,
        (_e = settings.showLegend) != null ? _e : true,
        settings.renderInteractiveBelow
        /* divider 표시 여부 */
      );
      this.ui.colorize(
        (title, d) => model.colorFor(title, d, pack),
        (title, d) => {
          const { startField, endField, pages, year, month } = pack;
          const pg = pages.find((p) => {
            var _a4;
            return (p.title || ((_a4 = p.file) == null ? void 0 : _a4.name)) === title;
          });
          if (!pg) return null;
          const sDt = dv.date(pg[startField]);
          const eDt = dv.date(pg[endField]);
          if (sDt && sDt.year === year && sDt.month - 1 === month && sDt.day === d)
            return "start";
          if (eDt && eDt.year === year && eDt.month - 1 === month && eDt.day === d)
            return "end";
          return null;
        }
      );
      this.ui.highlightToday();
      if (settings.renderInteractiveBelow) {
        const engine = (_f = window.coverTable) == null ? void 0 : _f.engine;
        if (engine) {
          const itMount = wrap.createDiv({ cls: "ct-it-mount" });
          if (ctx)
            await engine.renderAutoView(
              dv,
              (_g = settings.interactiveOptions) != null ? _g : {},
              ctx,
              itMount
            );
        }
      }
      if (settings.debugLegend) {
        const pre = wrap.createEl("pre", { cls: "gantt-debug" });
        pre.innerText = JSON.stringify(pack.legend, null, 2);
      }
      dv.current = origCurrent;
    } finally {
      this._rendering = false;
    }
  }
  /*─────────────────────────────────────────────────────────────
    🔧  내부 헬퍼 – 테이블 HTML 생성
    · Model ←→ UI 경계에 남겨두면 Controller 테스트가 쉬워짐
  ─────────────────────────────────────────────────────────────*/
  buildTableHTML(pack) {
    const { pages, daysInMonth } = pack;
    const headCols = Array.from(
      { length: daysInMonth },
      (_, i) => `<th class="gantt-day-col">${String(i + 1).padStart(2, "0")}</th>`
    ).join("");
    const thead = `<thead><tr><th class="gantt-corner-col"></th>${headCols}</tr></thead>`;
    let tbody = "<tbody>";
    pages.forEach((pg) => {
      var _a3;
      const title = pg.title || ((_a3 = pg.file) == null ? void 0 : _a3.name) || "Untitled";
      tbody += `<tr><td class="gantt-note-col">${title}</td>`;
      for (let d = 1; d <= daysInMonth; d++) {
        tbody += `<td class="gantt-cell" data-note="${title}" data-day="${d}"></td>`;
      }
      tbody += "</tr>";
    });
    tbody += "</tbody>";
    return `<table class="gantt-table">${thead}${tbody}</table>`;
  }
};

// src/features/header-numbering/HeaderNumberingService.ts
var HeaderNumberingService = class {
  // 숨김 style id
  constructor(plugin) {
    this.plugin = plugin;
    /*──────── 필드 ────────*/
    /** h1‥h6 카운터 (index 0 = h1) */
    this.cnt = [0, 0, 0, 0, 0, 0];
    this.lastPath = null;
    // 문서 경계 확인
    this.styleInjected = false;
    // base 스타일 1회 주입
    this.HIDE_ID = "ct-hn-hide";
  }
  /*============================================================
    register() – 플러그인 onload 시 CoverTablePlugin 이 호출
  ============================================================*/
  register() {
    this.injectBaseStyleOnce();
    this.injectHideStyle();
    this.plugin.registerMarkdownPostProcessor(
      (el, ctx) => {
        if (ctx.sourcePath !== this.lastPath) {
          this.cnt.fill(0);
          this.lastPath = ctx.sourcePath;
        }
        el.querySelectorAll("h1,h2,h3,h4,h5,h6").forEach((h) => this.decorate(h));
      },
      /* 낮은 우선순위(100) → 다른 플러그인 처리 이후 실행 */
      100
    );
    this.plugin.registerEvent(
      this.plugin.app.workspace.on("file-open", () => {
        this.cnt.fill(0);
        this.lastPath = null;
      })
    );
    this.plugin.registerEvent(
      this.plugin.app.workspace.on("css-change", () => this.injectHideStyle())
    );
  }
  /*───────────────────────────────────────────────────────────────
    decorate() – <hX> 요소 앞에 “1.2 ” 라벨 삽입
  ───────────────────────────────────────────────────────────────*/
  decorate(h) {
    const level = Number(h.tagName[1]);
    if (!level) return;
    for (let i = level; i < 6; i++) this.cnt[i] = 0;
    this.cnt[level - 1]++;
    const label = this.cnt.slice(0, level).join(".") + " ";
    let span = h.querySelector(".ct-hn-label");
    if (!span) {
      span = document.createElement("span");
      span.className = "ct-hn-label";
      h.prepend(span);
    }
    span.textContent = label;
  }
  /*───────────────────────────────────────────────────────────────
    injectBaseStyleOnce() – 기본 라벨용 CSS 주입
  ───────────────────────────────────────────────────────────────*/
  injectBaseStyleOnce() {
    if (this.styleInjected) return;
    this.styleInjected = true;
    const css = `
      /* HeaderNumbering \u2013 \uAE30\uC874 CSS counter \uC81C\uAC70 */
      .markdown-preview-view h1::before,
      .markdown-preview-view h2::before,
      .markdown-preview-view h3::before,
      .markdown-preview-view h4::before,
      .markdown-preview-view h5::before,
      .markdown-preview-view h6::before{ content:none!important; }

      /* \uC0C8 \uB77C\uBCA8(span) \uACF5\uD1B5 \uC2A4\uD0C0\uC77C */
      .ct-hn-label{ font-weight:bold; margin-right:.3em; }
    `;
    const st = document.createElement("style");
    st.id = "ct-hn-style";
    st.textContent = css;
    document.head.appendChild(st);
  }
  /*───────────────────────────────────────────────────────────────
    injectHideStyle() – Settings 토글 OFF ⇒ 라벨 숨김
  ───────────────────────────────────────────────────────────────*/
  injectHideStyle() {
    var _a3, _b;
    const enabled = (_b = (_a3 = this.plugin.settings) == null ? void 0 : _a3.enableHeaderNumbering) != null ? _b : true;
    let st = document.getElementById(this.HIDE_ID);
    if (!enabled) {
      if (!st) {
        st = document.createElement("style");
        st.id = this.HIDE_ID;
        document.head.appendChild(st);
      }
      st.textContent = `.ct-hn-label{ display:none!important; }`;
    } else {
      st == null ? void 0 : st.remove();
    }
  }
  /*============================================================
    destroy() – 외부 수동 해제용 (현재는 사용되지 않음)
  ============================================================*/
  destroy() {
    this.cnt.fill(0);
    this.lastPath = null;
  }
};

// src/theme/ListCalloutManager.ts
var import_view = require("@codemirror/view");
var import_state = require("@codemirror/state");
function createPlugin(map) {
  const chars = Object.keys(map).join("");
  if (!chars) return [];
  const re = new RegExp(`^\\s*(?:[-*+]|\\d+[.)])\\s+([${chars}])\\s+`);
  const decoFor = (view) => {
    const builder = new import_state.RangeSetBuilder();
    const docEnd = view.state.doc.length;
    for (const { from, to } of view.visibleRanges) {
      let pos = from;
      while (pos <= to && pos < docEnd) {
        const line = view.state.doc.lineAt(pos);
        const m = re.exec(line.text);
        if (m) {
          const ch = m[1];
          builder.add(
            line.from,
            line.from,
            import_view.Decoration.line({ attributes: { class: "lc-cm6-row", "data-callout-char": ch } })
          );
        }
        if (line.to <= pos) break;
        pos = line.to + 1;
      }
    }
    return builder.finish();
  };
  return import_view.ViewPlugin.fromClass(
    class {
      constructor(view) {
        this.decorations = decoFor(view);
      }
      update(u) {
        if (u.docChanged || u.viewportChanged) this.decorations = decoFor(u.view);
      }
    },
    { decorations: (v) => v.decorations }
  );
}
var ListCalloutManager = class {
  constructor(plugin) {
    this.plugin = plugin;
    this.styleEl = null;
    this.cmExt = [];
    this.cmDispose = null;
    // ← Disposable 보관
    this.map = {};
    this.rebuild();
  }
  rebuild() {
    var _a3;
    this.map = {};
    ((_a3 = this.plugin.settings.listCallouts) != null ? _a3 : []).forEach(
      (c) => this.map[c.char] = c
    );
    this.injectCss();
    if (this.cmDispose) {
      this.cmDispose();
      this.cmDispose = null;
    }
    this.cmExt = createPlugin(this.map);
    if (this.cmExt.length)
      this.plugin.registerEditorExtension(this.cmExt);
  }
  /*───────────────────────────────────────────────────────────*/
  editorExtensions() {
    return this.cmExt;
  }
  /*****************************************************************
   * src/theme/ListCalloutManager.ts – patch snippet
   * ① 링크 노드를 보존하면서 pill 구성
   * ② 읽기모드에서 더블-클릭 ⇒ a.href 트리거
   *****************************************************************/
  /*───────────────────────────────────────────────────────────────
    postProcessor() – 첫 위키링크가 없으면 순수 텍스트 사용
  ───────────────────────────────────────────────────────────────*/
  /*───────────────────────────────────────────────────────────────
    postProcessor() – “첫 링크 노드를 그대로 살려 pill 로 감싸기”
  ───────────────────────────────────────────────────────────────*/
  postProcessor() {
    return (el) => {
      if (!Object.keys(this.map).length) return;
      el.querySelectorAll("li").forEach((li) => {
        var _a3;
        const raw = (_a3 = li.textContent) != null ? _a3 : "";
        const ch = raw.trim().charAt(0);
        if (!this.map[ch]) return;
        const firstLink = li.querySelector(
          "a.internal-link, a.external-link, a:not([href^='#'])"
        );
        let labelNode;
        if (firstLink) {
          labelNode = firstLink;
        } else {
          const txt = raw.trim().slice(1).trim();
          labelNode = document.createTextNode(txt || " ");
        }
        li.replaceChildren();
        const pill = document.createElement("span");
        pill.className = "lc-pill";
        pill.appendChild(labelNode);
        li.appendChild(pill);
        li.classList.add("lc-list-callout");
        li.setAttribute("data-callout-char", ch);
        if (firstLink) {
          li.addEventListener("dblclick", () => {
            if (!li.closest(".markdown-reading-view")) return;
            firstLink.dispatchEvent(
              new MouseEvent("click", { bubbles: true, cancelable: true, view: window })
            );
          });
        }
      });
    };
  }
  /*───────────────────────────────────────────────────────────────
    injectCss() – 콜아웃 리스트를 “단일 텍스트 + 배경” 버전으로 복원
  ───────────────────────────────────────────────────────────────*/
  injectCss() {
    if (!this.styleEl) {
      this.styleEl = document.createElement("style");
      this.styleEl.id = "ct-lc-style";
      document.head.appendChild(this.styleEl);
    }
    let css = `
    /* \uC77C\uBC18 \uB9AC\uC2A4\uD2B8 \uC720\uC9C0, \uCF5C\uC544\uC6C3 \uC548\uC5D0\uC11C\uB9CC \uBD88\uB9BF \uC228\uAE40 */
  li.lc-list-callout .list-bullet{display:none!important;}

  li.lc-list-callout{
    list-style:none!important;
    margin:0!important;
    padding:0!important;
    font: 600 1em/1 var(--font-interface);
  }
  li.lc-list-callout::marker{content:""!important}

  .lc-pill{
    display:block;
    width:100%;
    padding:6px 10px;
    border-radius:6px;
    font-weight:600;
    margin:0px 0px 5px 0px;
    cursor: pointer;
  }
  .lc-pill:hover{
    transition:all .3s ease;
    transform:scale(.95);
  }

  /* \uB9C1\uD06C\u2006\u2192 \u201C\uC77C\uBC18 \uD14D\uC2A4\uD2B8\u201D \uCC98\uB9AC */
  .lc-pill a{
    color:inherit!important;
    text-decoration:none!important;
  }

  /* hover \uAC15\uC870\xB7\uC678\uACFD \uBC30\uACBD \uC81C\uAC70 (pill \uB0B4\uBD80 \uBC30\uACBD\uB9CC \uD45C\uC2DC) */
  .markdown-reading-view li.lc-list-callout:hover{
    background:unset!important;
  }

  /* \uD3B8\uC9D1\uBAA8\uB4DC CM6 \uD589 \uB370\uCF54 \uC601\uD5A5 \uC5C6\uC774, \uC77D\uAE30\uBAA8\uB4DC \uC804\uC6A9 \uBC30\uACBD\uB9CC \uC720\uC9C0 */
  .markdown-reading-view li.lc-list-callout .cm-line{background:transparent!important;}
  `;
    for (const ch in this.map) {
      const c = this.map[ch];
      css += `
    .theme-light li[data-callout-char='${ch}'] .lc-pill{
      background:${c.bgLight}!important;
      color:${c.fgLight}!important;
    }
    .theme-dark  li[data-callout-char='${ch}'] .lc-pill{
      background:${c.bgDark}!important;
      color:${c.fgDark}!important;
    }
    li.lc-list-callout[data-callout-char='${ch}'] .lc-pill::before{ 
      content:""; 
    }`;
    }
    this.styleEl.textContent = css;
  }
};

// src/features/embed/EmbedOverride.ts
var EmbedOverride = class {
  /*─────────── ctor ───────────*/
  constructor(app, getCfg) {
    this.app = app;
    this.getCfg = getCfg;
    /*─────────── 필드 ───────────*/
    this.offDrop = null;
    this.offPaste = null;
  }
  /*============================================================
   *  enable() / disable()
   *  · Settings 토글·변경 시 EmbedService 가 재호출
   *===========================================================*/
  enable() {
    this.disable();
    if (!this.getCfg().enableEmbedNoPreview) return;
    const listener = (evt, editor, _v) => {
      var _a3, _b;
      const files = evt instanceof DragEvent ? (_a3 = evt.dataTransfer) == null ? void 0 : _a3.files : (_b = evt.clipboardData) == null ? void 0 : _b.files;
      if (!(files == null ? void 0 : files.length)) return;
      const exts = this.getCfg().nonPreviewExtensions.map((e) => e.toLowerCase());
      let needOverride = false;
      for (const f of Array.from(files)) {
        const ext = f.name.includes(".") ? f.name.slice(f.name.lastIndexOf(".")).toLowerCase() : "";
        if (ext && exts.includes(ext)) {
          needOverride = true;
          break;
        }
      }
      if (!needOverride) return;
      evt.preventDefault();
      evt.stopPropagation();
      let insertText = "";
      for (const f of Array.from(files)) {
        const ext = f.name.includes(".") ? f.name.slice(f.name.lastIndexOf(".")).toLowerCase() : "";
        insertText += ext && exts.includes(ext) ? `[[${f.name}]]
` : `![[${f.name}]]
`;
      }
      if (insertText.endsWith("\n"))
        insertText = insertText.slice(0, -1);
      editor.replaceSelection(insertText);
    };
    this.offDrop = this.app.workspace.on("editor-drop", listener);
    this.offPaste = this.app.workspace.on("editor-paste", listener);
  }
  disable() {
    if (this.offDrop) this.app.workspace.offref(this.offDrop);
    if (this.offPaste) this.app.workspace.offref(this.offPaste);
    this.offDrop = this.offPaste = null;
  }
  /*============================================================
   *  외부 노출 편의 메서드
   *===========================================================*/
  /** Settings 변경 후 EmbedService → enable() 재호출 */
  reload() {
    this.enable();
  }
  /** Plugin.unload → 완전 해제 */
  destroy() {
    this.disable();
  }
};

// src/features/embed/EmbedService.ts
var DEFAULT_EMBED_SETTINGS = {
  enableEmbedNoPreview: true,
  nonPreviewExtensions: [".pdf", ".exe", ".zip", ".rar"]
};
var EmbedService = class {
  /**
   * @param plugin   CoverTablePlugin 인스턴스(Plugin.app 필요)
   * @param getCfg   최신 EmbedFileHandlerSettings 를 반환하는 함수
   */
  constructor(plugin, getCfg) {
    this.override = new EmbedOverride(plugin.app, getCfg);
  }
  /*============================================================
    플러그인에서 직접 호출할 공개 API
  ============================================================*/
  /** 설정을 반영하여 리스너를 (재)등록 */
  enable() {
    this.override.enable();
  }
  /** enable() 별칭 – 설정 변경 직후 편의용 */
  reload() {
    this.override.reload();
  }
  /** 리스너 제거(Obsidian Workspace 이벤트 해제) */
  disable() {
    this.override.disable();
  }
  /** plugin.onunload() 시 호출 */
  destroy() {
    this.override.destroy();
  }
};

// src/theme/css/base.css
var base_default = '/*****************************************************************\r\n *  Cover-Table  \u2013  Global Color \xB7 Style Tokens  (\uCD5C\uC885 \uD1B5\uD569\uD310)\r\n *  \xB7 \uAE30\uC874 \uAE30\uB2A5 \u201C\uBAA8\uB450\u201D \uBCF4\uC874  \xB7 \uC694\uC57D/\uD568\uCD95/\uC0AD\uC81C \uC5C6\uC74C\r\n *  \xB7 \uD14C\uC774\uBE14\xB7\uC774\uBBF8\uC9C0 \uC0C9\uC0C1\uC740 \uB2E8\uC77C \uD1A0\uD070 + \uB2E4\uD06C/\uB77C\uC774\uD2B8 \uC790\uB3D9 \uC624\uBC84\uB77C\uC774\uB4DC\r\n *  \xB7 \uD5E4\uB529\uC740 \uBB34\uC9C0\uAC1C 6\uC0C9(\uD1A0\uD070)\uC73C\uB85C \uC9C1\uAD00\uC801 \uAD6C\uBD84\r\n *****************************************************************/\r\n:root{\r\n  /* \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \uBCA0\uC774\uC2A4 / \uACF5\uD1B5 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 */\r\n  --ct-base-white        : #ffffff;\r\n  --ct-base-black        : #000000;\r\n\r\n  /* \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \uD0D0\uC0C9\uAE30 \uD3F4\uB354 \uC0C9\uC0C1 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 */\r\n  /* 0 \uB2E8\uACC4(\uCD5C\uC0C1\uC704) */\r\n  --ct-folder-lvl0-01-dark  : #91dcff;   --ct-folder-lvl0-01-light  : #0076ad;\r\n  --ct-folder-lvl0-25-dark  : #fffcab;   --ct-folder-lvl0-25-light  : #989300;\r\n  --ct-folder-lvl0-68-dark  : #ffb3ab;   --ct-folder-lvl0-68-light  : #9b1000;\r\n  /* 1 \uB2E8\uACC4(\uB0B4\uBD80) */\r\n  --ct-folder-lvl1-01-dark  : #2ebdff;   --ct-folder-lvl1-01-light  : #003d5a;\r\n  --ct-folder-lvl1-25-dark  : #ffdf3e;   --ct-folder-lvl1-25-light  : #453a01;\r\n  --ct-folder-lvl1-68-dark  : #ff7e4f;   --ct-folder-lvl1-68-light  : #461300;\r\n  /* \u2018Q)\u2019 \uD3F4\uB354\uB178\uD2B8 */\r\n  --ct-folder-q-dark        : #848484;   --ct-folder-q-light        : #848484;\r\n\r\n  /* \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \uBCF8\uBB38 \uD14D\uC2A4\uD2B8 \uC2A4\uD0C0\uC77C \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 */\r\n  --ct-bold-dark            : rgb(255,188,188);\r\n  --ct-bold-light           : rgb(138,0,119);\r\n\r\n  /* \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \uD5E4\uB529(\uBB34\uC9C0\uAC1C \uD1A0\uD070: \uC77D\uAE30+\uD3B8\uC9D1 \uACF5\uD1B5) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 */\r\n  --ct-h1-dark : #ff5555;  --ct-h1-light : #ff5555;   /* red    */\r\n  --ct-h2-dark : #ffae42;  --ct-h2-light : #ffae42;   /* orange */\r\n  --ct-h3-dark : #f7ff50;  --ct-h3-light : #f7ff50;   /* yellow */\r\n  --ct-h4-dark : #4cd964;  --ct-h4-light : #4cd964;   /* green  */\r\n  --ct-h5-dark : #5ac8fa;  --ct-h5-light : #5ac8fa;   /* blue   */\r\n  --ct-h6-dark : #af52de;  --ct-h6-light : #af52de;   /* violet */\r\n\r\n  /* \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \uB9AC\uC2A4\uD2B8 \uBD88\uB9BF/\uBC88\uD638 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 */\r\n  --ct-bullet-dark          : rgb(89,89,223);\r\n  --ct-bullet-light         : rgb(54,54,190);\r\n  --ct-ol-marker-dark       : red;\r\n  --ct-ol-marker-light      : red;\r\n\r\n  /* \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \uD14C\uC774\uBE14(\uB2E8\uC77C \uD1A0\uD070) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 */\r\n  --ct-table-border         : #c0c0c0;         /* light \uAE30\uBCF8, dark \uBAA8\uB4DC\uC5D0\uC11C \uC7AC\uC815\uC758 */\r\n  --ct-table-shadow         : rgba(0,0,0,.10);\r\n  --ct-table-row-even       : rgba(0,0,0,.03);\r\n  --ct-table-row-hover      : rgba(0,0,0,.07);\r\n\r\n  /* \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \uC774\uBBF8\uC9C0(\uB2E8\uC77C \uD1A0\uD070) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 */\r\n  --ct-image-border         : #d0d0d0;\r\n  --ct-image-shadow         : rgba(0,0,0,.10);\r\n}\r\n\r\n/* \uB2E4\uD06C \uBAA8\uB4DC \uC624\uBC84\uB77C\uC774\uB4DC \u2013 \uC790\uB3D9 \uC0C9\uC0C1 \uC804\uD658 */\r\n.theme-dark:root{\r\n  --image-border            : #555555;\r\n  --image-shadow            : rgba(0,0,0,.60);\r\n\r\n  /* \uD14C\uC774\uBE14 \uD1A0\uD070(\uD22C\uBA85\xB7\uBC30\uACBD\uACC4\uC5F4) */\r\n  --ct-table-border         : #444444;\r\n  --ct-table-shadow         : rgba(0,0,0,.55);\r\n  --ct-table-row-even       : transparent;\r\n  --ct-table-row-hover      : rgba(255,255,255,.07);\r\n}\r\n\r\n/* \uB77C\uC774\uD2B8 \uBAA8\uB4DC \uC624\uBC84\uB77C\uC774\uB4DC \u2013 \uC790\uB3D9 \uC0C9\uC0C1 \uC804\uD658 */\r\n.theme-light:root{\r\n  --image-border            : #d0d0d0;\r\n  --image-shadow            : rgba(0,0,0,.10);\r\n\r\n  --ct-table-border         : #c0c0c0;\r\n  --ct-table-shadow         : rgba(0,0,0,.10);\r\n  --ct-table-row-even       : rgba(0,0,0,.03);\r\n  --ct-table-row-hover      : rgba(0,0,0,.07);\r\n}\r\n\r\n/*****************************************************************\r\n *  \uACF5\uD1B5 \uD0C0\uC774\uD3EC\uADF8\uB798\uD53C / \uB808\uC774\uC544\uC6C3\r\n *****************************************************************/\r\np               { text-indent:25px; margin:5px 0!important; text-align:justify; }\r\nli p            { text-indent:0px !important;}\r\nli              { margin-block:5px; }\r\n.hr.cm-line     { text-indent:0!important; }\r\n.cm-line        { font-size:1em!important; text-align:justify; text-indent:25px; line-height:1.5em; }\r\n.cm-s-obsidian .cm-line.HyperMD-header { padding:0!important; text-indent:0; }\r\n.HyperMD-list-line.HyperMD-list-line-1.cm-line { text-indent:-50px!important; padding-inline-start:40px!important; }\r\n\r\n/*****************************************************************\r\n *  \uD0D0\uC0C9\uAE30 \uD3F4\uB354 \uC0C9\uC0C1 (\uBAA8\uB4E0 \uB2E8\uACC4\xB7\uBAA8\uB4DC \uBCF4\uC874)\r\n *****************************************************************/\r\n\r\n/* \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\n   0 \uB2E8\uACC4(\uCD5C\uC0C1\uC704)  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/\r\n/* DARK */\r\n.theme-dark .nav-files-container .tree-item.nav-folder> .tree-item-self[data-path^="0_"],\r\n.theme-dark .nav-files-container .tree-item.nav-folder> .tree-item-self[data-path^="1_"]{\r\n  color:var(--ct-folder-lvl0-01-dark)!important;\r\n}\r\n.theme-dark .nav-files-container .tree-item.nav-folder> .tree-item-self[data-path^="2_"],\r\n.theme-dark .nav-files-container .tree-item.nav-folder> .tree-item-self[data-path^="3_"],\r\n.theme-dark .nav-files-container .tree-item.nav-folder> .tree-item-self[data-path^="4_"],\r\n.theme-dark .nav-files-container .tree-item.nav-folder> .tree-item-self[data-path^="5_"]{\r\n  color:var(--ct-folder-lvl0-25-dark)!important;\r\n}\r\n.theme-dark .nav-files-container .tree-item.nav-folder> .tree-item-self[data-path^="6_"],\r\n.theme-dark .nav-files-container .tree-item.nav-folder> .tree-item-self[data-path^="7_"],\r\n.theme-dark .nav-files-container .tree-item.nav-folder> .tree-item-self[data-path^="8_"]{\r\n  color:var(--ct-folder-lvl0-68-dark)!important;\r\n}\r\n\r\n/* LIGHT */\r\n.theme-light .nav-files-container .tree-item.nav-folder> .tree-item-self[data-path^="0_"],\r\n.theme-light .nav-files-container .tree-item.nav-folder> .tree-item-self[data-path^="1_"]{\r\n  color:var(--ct-folder-lvl0-01-light)!important;\r\n}\r\n.theme-light .nav-files-container .tree-item.nav-folder> .tree-item-self[data-path^="2_"],\r\n.theme-light .nav-files-container .tree-item.nav-folder> .tree-item-self[data-path^="3_"],\r\n.theme-light .nav-files-container .tree-item.nav-folder> .tree-item-self[data-path^="4_"],\r\n.theme-light .nav-files-container .tree-item.nav-folder> .tree-item-self[data-path^="5_"]{\r\n  color:var(--ct-folder-lvl0-25-light)!important;\r\n}\r\n.theme-light .nav-files-container .tree-item.nav-folder> .tree-item-self[data-path^="6_"],\r\n.theme-light .nav-files-container .tree-item.nav-folder> .tree-item-self[data-path^="7_"],\r\n.theme-light .nav-files-container .tree-item.nav-folder> .tree-item-self[data-path^="8_"]{\r\n  color:var(--ct-folder-lvl0-68-light)!important;\r\n}\r\n\r\n/* \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\n   1 \uB2E8\uACC4(\uB0B4\uBD80)  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/\r\n/* DARK */\r\n.theme-dark .nav-files-container .tree-item.nav-folder .tree-item-children .tree-item.nav-folder> .tree-item-self[data-path^="0_"],\r\n.theme-dark .nav-files-container .tree-item.nav-folder .tree-item-children .tree-item.nav-folder> .tree-item-self[data-path^="1_"]{\r\n  color:var(--ct-folder-lvl1-01-dark)!important;\r\n}\r\n.theme-dark .nav-files-container .tree-item.nav-folder .tree-item-children .tree-item.nav-folder> .tree-item-self[data-path^="2_"],\r\n.theme-dark .nav-files-container .tree-item.nav-folder .tree-item-children .tree-item.nav-folder> .tree-item-self[data-path^="3_"],\r\n.theme-dark .nav-files-container .tree-item.nav-folder .tree-item-children .tree-item.nav-folder> .tree-item-self[data-path^="4_"],\r\n.theme-dark .nav-files-container .tree-item.nav-folder .tree-item-children .tree-item.nav-folder> .tree-item-self[data-path^="5_"]{\r\n  color:var(--ct-folder-lvl1-25-dark)!important;\r\n}\r\n.theme-dark .nav-files-container .tree-item.nav-folder .tree-item-children .tree-item.nav-folder> .tree-item-self[data-path^="6_"],\r\n.theme-dark .nav-files-container .tree-item.nav-folder .tree-item-children .tree-item.nav-folder> .tree-item-self[data-path^="7_"],\r\n.theme-dark .nav-files-container .tree-item.nav-folder .tree-item-children .tree-item.nav-folder> .tree-item-self[data-path^="8_"]{\r\n  color:var(--ct-folder-lvl1-68-dark)!important;\r\n}\r\n\r\n/* LIGHT */\r\n.theme-light .nav-files-container .tree-item.nav-folder .tree-item-children .tree-item.nav-folder> .tree-item-self[data-path^="0_"],\r\n.theme-light .nav-files-container .tree-item.nav-folder .tree-item-children .tree-item.nav-folder> .tree-item-self[data-path^="1_"]{\r\n  color:var(--ct-folder-lvl1-01-light)!important;\r\n}\r\n.theme-light .nav-files-container .tree-item.nav-folder .tree-item-children .tree-item.nav-folder> .tree-item-self[data-path^="2_"],\r\n.theme-light .nav-files-container .tree-item.nav-folder .tree-item-children .tree-item.nav-folder> .tree-item-self[data-path^="3_"],\r\n.theme-light .nav-files-container .tree-item.nav-folder .tree-item-children .tree-item.nav-folder> .tree-item-self[data-path^="4_"],\r\n.theme-light .nav-files-container .tree-item.nav-folder .tree-item-children .tree-item.nav-folder> .tree-item-self[data-path^="5_"]{\r\n  color:var(--ct-folder-lvl1-25-light)!important;\r\n}\r\n.theme-light .nav-files-container .tree-item.nav-folder .tree-item-children .tree-item.nav-folder> .tree-item-self[data-path^="6_"],\r\n.theme-light .nav-files-container .tree-item.nav-folder .tree-item-children .tree-item.nav-folder> .tree-item-self[data-path^="7_"],\r\n.theme-light .nav-files-container .tree-item.nav-folder .tree-item-children .tree-item.nav-folder> .tree-item-self[data-path^="8_"]{\r\n  color:var(--ct-folder-lvl1-68-light)!important;\r\n}\r\n\r\n/* \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\n   \u2018Q)\u2019 \uD3F4\uB354\uB178\uD2B8 \uC0C9\uC0C1  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/\r\n/* DARK */\r\n.theme-dark .nav-files-container .tree-item.nav-folder .tree-item-children .tree-item-self.is-clickable.mod-collapsible.has-folder-note[data-path*="Q)"]{\r\n  color:var(--ct-folder-q-dark)!important;\r\n}\r\n/* LIGHT */\r\n.theme-light .nav-files-container .tree-item.nav-folder .tree-item-children .tree-item-self.is-clickable.mod-collapsible.has-folder-note[data-path*="Q)"]{\r\n  color:var(--ct-folder-q-light)!important;\r\n}\r\n\r\n\r\n/*****************************************************************\r\n *  \uBCFC\uB4DC \uCEEC\uB7EC (\uAE30\uC874 \uAE30\uB2A5 \uC720\uC9C0)\r\n *****************************************************************/\r\n.theme-dark .markdown-preview-view strong,\r\n.theme-dark .markdown-preview-view b,\r\n.theme-dark .markdown-source-view.mod-cm6 .cm-content strong,\r\n.theme-dark .markdown-source-view.mod-cm6 .cm-content b,\r\n.theme-dark .markdown-source-view.mod-cm6 .cm-content .cm-strong{\r\n  font-weight:normal!important; color:var(--ct-bold-dark)!important;\r\n}\r\n.theme-light .markdown-preview-view strong,\r\n.theme-light .markdown-preview-view b,\r\n.theme-light .markdown-source-view.mod-cm6 .cm-content strong,\r\n.theme-light .markdown-source-view.mod-cm6 .cm-content b,\r\n.theme-light .markdown-source-view.mod-cm6 .cm-content .cm-strong{\r\n  font-weight:normal!important; color:var(--ct-bold-light)!important;\r\n}\r\n\r\n/*****************************************************************\r\n *  \uD5E4\uB529 \u2013 \uBB34\uC9C0\uAC1C + \uBC11\uC904 100% + \uC544\uC774\uCF58 \uC6B0\uCE21\r\n *****************************************************************/\r\n.markdown-preview-view h1,\r\n.markdown-preview-view h2,\r\n.markdown-preview-view h3,\r\n.markdown-preview-view h4,\r\n.markdown-preview-view h5,\r\n.markdown-preview-view h6{\r\n  display:flex!important; align-items:center; width:100%!important;\r\n  font-size:1.5em; line-height:1em; margin:5px 0!important; border-bottom-style:outset;\r\n}\r\n.markdown-preview-view h1{color:var(--ct-h1-dark); border-bottom-color:var(--ct-h1-dark);}\r\n.markdown-preview-view h2{color:var(--ct-h2-dark); border-bottom-color:var(--ct-h2-dark);}\r\n.markdown-preview-view h3{color:var(--ct-h3-dark); border-bottom-color:var(--ct-h3-dark);}\r\n.markdown-preview-view h4{color:var(--ct-h4-dark); border-bottom-color:var(--ct-h4-dark);}\r\n.markdown-preview-view h5{color:var(--ct-h5-dark); border-bottom-color:var(--ct-h5-dark);}\r\n.markdown-preview-view h6{color:var(--ct-h6-dark); border-bottom-color:var(--ct-h6-dark);}\r\n.theme-light .markdown-preview-view h1{color:var(--ct-h1-light); border-bottom-color:var(--ct-h1-light);}\r\n.theme-light .markdown-preview-view h2{color:var(--ct-h2-light); border-bottom-color:var(--ct-h2-light);}\r\n.theme-light .markdown-preview-view h3{color:var(--ct-h3-light); border-bottom-color:var(--ct-h3-light);}\r\n.theme-light .markdown-preview-view h4{color:var(--ct-h4-light); border-bottom-color:var(--ct-h4-light);}\r\n.theme-light .markdown-preview-view h5{color:var(--ct-h5-light); border-bottom-color:var(--ct-h5-light);}\r\n.theme-light .markdown-preview-view h6{color:var(--ct-h6-light); border-bottom-color:var(--ct-h6-light);}\r\n.markdown-preview-view h1 .collapse-indicator,\r\n.markdown-preview-view h2 .collapse-indicator,\r\n.markdown-preview-view h3 .collapse-indicator,\r\n.markdown-preview-view h4 .collapse-indicator,\r\n.markdown-preview-view h5 .collapse-indicator,\r\n.markdown-preview-view h6 .collapse-indicator{margin-left:auto;}\r\n\r\n.cm-header-1{font-size:1.5em!important;line-height:2em;color:var(--ct-h1-dark);border-bottom:outset 1px var(--ct-h1-dark);}\r\n.cm-header-2{font-size:1.5em!important;line-height:2em;color:var(--ct-h2-dark);border-bottom:outset 1px var(--ct-h2-dark);}\r\n.cm-header-3{font-size:1.5em!important;line-height:2em;color:var(--ct-h3-dark);border-bottom:outset 1px var(--ct-h3-dark);}\r\n.cm-header-4{font-size:1.5em!important;line-height:2em;color:var(--ct-h4-dark);border-bottom:outset 1px var(--ct-h4-dark);}\r\n.cm-header-5{font-size:1.5em!important;line-height:2em;color:var(--ct-h5-dark);border-bottom:outset 1px var(--ct-h5-dark);}\r\n.cm-header-6{font-size:1.5em!important;line-height:2em;color:var(--ct-h6-dark);border-bottom:outset 1px var(--ct-h6-dark);}\r\n.theme-light .cm-header-1{color:var(--ct-h1-light);border-bottom-color:var(--ct-h1-light);}\r\n.theme-light .cm-header-2{color:var(--ct-h2-light);border-bottom-color:var(--ct-h2-light);}\r\n.theme-light .cm-header-3{color:var(--ct-h3-light);border-bottom-color:var(--ct-h3-light);}\r\n.theme-light .cm-header-4{color:var(--ct-h4-light);border-bottom-color:var(--ct-h4-light);}\r\n.theme-light .cm-header-5{color:var(--ct-h5-light);border-bottom-color:var(--ct-h5-light);}\r\n.theme-light .cm-header-6{color:var(--ct-h6-light);border-bottom-color:var(--ct-h6-light);}\r\n\r\n/*****************************************************************\r\n *  \uB9AC\uC2A4\uD2B8 \uB9C8\uCEE4 (\uAE30\uB2A5 \uC644\uC804 \uBCF4\uC874)\r\n *****************************************************************/\r\n/* \u2500\u2500 *  DARK MODE  (theme-dark) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 */\r\n.theme-dark .list-number,\r\n.theme-dark ol>li::marker,\r\n.theme-dark ul>li::marker {\r\n  color: var(--ct-ol-marker-dark);\r\n}\r\n\r\n.theme-dark .markdown-reading-view ul>li>.list-bullet:after,\r\n.theme-dark .markdown-source-view.mod-cm6 .HyperMD-list-line-1 .list-bullet:after {\r\n  height: 5px; width: 5px; border-radius: 50%;\r\n  background: var(--ct-bullet-dark) !important;\r\n}\r\n\r\n.theme-dark .markdown-reading-view ul>li>ul>li>.list-bullet:after,\r\n.theme-dark .markdown-source-view.mod-cm6 .HyperMD-list-line-2 .list-bullet:after {\r\n  height: 1px; width: 7px; border-radius: 0;\r\n  background: var(--ct-bullet-dark) !important;\r\n}\r\n\r\n.theme-dark .markdown-reading-view ul>li>ul>li>ul>li>.list-bullet:after,\r\n.theme-dark .markdown-source-view.mod-cm6 .HyperMD-list-line-3 .list-bullet:after {\r\n  height: 4px; width: 4px;\r\n  background: transparent;\r\n  border: 1px solid var(--ct-bullet-dark) !important; border-radius: 50%;\r\n}\r\n\r\n.theme-dark .markdown-reading-view ul>li>ul>li>ul>li>ul>li>.list-bullet:after,\r\n.theme-dark .markdown-source-view.mod-cm6 .HyperMD-list-line-4 .list-bullet:after {\r\n  height: 5px; width: 5px; border-radius: 0;\r\n  background: var(--ct-bullet-dark) !important;\r\n}\r\n\r\n.theme-dark .markdown-reading-view ul>li>ul>li>ul>li>ul>li>ul>li>.list-bullet:after,\r\n.theme-dark .markdown-source-view.mod-cm6 .HyperMD-list-line-5 .list-bullet:after {\r\n  height: 1px; width: 7px; border-radius: 0;\r\n  background: var(--ct-bullet-dark) !important;\r\n}\r\n\r\n.theme-dark .markdown-reading-view ul>li>ul>li>ul>li>ul>li>ul>li>ul>li>.list-bullet:after,\r\n.theme-dark .markdown-source-view.mod-cm6 .HyperMD-list-line-6 .list-bullet:after {\r\n  height: 4px; width: 4px;\r\n  background: transparent;\r\n  border: 1px solid var(--ct-bullet-dark) !important;\r\n}\r\n\r\n.theme-dark .markdown-reading-view ul>li>ul>li>ul>li>ul>li>ul>li>ul>li>ul>li>.list-bullet:after,\r\n.theme-dark .markdown-source-view.mod-cm6 .HyperMD-list-line-7 .list-bullet:after {\r\n  height: 2px; width: 2px; border-radius: 50%;\r\n  background: var(--ct-bullet-dark) !important;\r\n}\r\n\r\n\r\n/* \u2500\u2500 LIGHT MODE  (theme-light) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 */\r\n.theme-light .list-number,\r\n.theme-light ol>li::marker,\r\n.theme-light ul>li::marker {\r\n  color: var(--ct-ol-marker-light);\r\n}\r\n\r\n.theme-light .markdown-reading-view ul>li>.list-bullet:after,\r\n.theme-light .markdown-source-view.mod-cm6 .HyperMD-list-line-1 .list-bullet:after {\r\n  height: 5px; width: 5px; border-radius: 50%;\r\n  background: var(--ct-bullet-light) !important;\r\n}\r\n\r\n.theme-light .markdown-reading-view ul>li>ul>li>.list-bullet:after,\r\n.theme-light .markdown-source-view.mod-cm6 .HyperMD-list-line-2 .list-bullet:after {\r\n  height: 1px; width: 7px; border-radius: 0;\r\n  background: var(--ct-bullet-light) !important;\r\n}\r\n\r\n.theme-light .markdown-reading-view ul>li>ul>li>ul>li>.list-bullet:after,\r\n.theme-light .markdown-source-view.mod-cm6 .HyperMD-list-line-3 .list-bullet:after {\r\n  height: 4px; width: 4px;\r\n  background: transparent;\r\n  border: 1px solid var(--ct-bullet-light) !important; border-radius: 50%;\r\n}\r\n\r\n.theme-light .markdown-reading-view ul>li>ul>li>ul>li>ul>li>.list-bullet:after,\r\n.theme-light .markdown-source-view.mod-cm6 .HyperMD-list-line-4 .list-bullet:after {\r\n  height: 5px; width: 5px; border-radius: 0;\r\n  background: var(--ct-bullet-light) !important;\r\n}\r\n\r\n.theme-light .markdown-reading-view ul>li>ul>li>ul>li>ul>li>ul>li>.list-bullet:after,\r\n.theme-light .markdown-source-view.mod-cm6 .HyperMD-list-line-5 .list-bullet:after {\r\n  height: 1px; width: 7px; border-radius: 0;\r\n  background: var(--ct-bullet-light) !important;\r\n}\r\n\r\n.theme-light .markdown-reading-view ul>li>ul>li>ul>li>ul>li>ul>li>ul>li>.list-bullet:after,\r\n.theme-light .markdown-source-view.mod-cm6 .HyperMD-list-line-6 .list-bullet:after {\r\n  height: 4px; width: 4px;\r\n  background: transparent;\r\n  border: 1px solid var(--ct-bullet-light) !important;\r\n}\r\n\r\n.theme-light .markdown-reading-view ul>li>ul>li>ul>li>ul>li>ul>li>ul>li>ul>li>.list-bullet:after,\r\n.theme-light .markdown-source-view.mod-cm6 .HyperMD-list-line-7 .list-bullet:after {\r\n  height: 2px; width: 2px; border-radius: 50%;\r\n  background: var(--ct-bullet-light) !important;\r\n}\r\n\r\n/*****************************************************************\r\n *  UI \uAC00\uB3C5\uC131 \u2013 \uACF5\uD1B5 \uC544\uC774\uCF58 \uC228\uAE40 (\uAE30\uC874 \uC720\uC9C0)\r\n *****************************************************************/\r\n.nav-files-container .tree-item.nav-folder .tree-item-children .tree-item.nav-folder>.tree-item-self .collapse-icon,\r\n.tree-item-self.nav-folder-title.has-folder-note::before{display:none!important;}\r\n\r\n/*****************************************************************\r\n *  \uD14C\uC774\uBE14 \uC2A4\uD0C0\uC77C \u2013 \uB2E8\uC77C \uD1A0\uD070 \uAE30\uBC18 / \uBAA8\uB4DC\uBCC4 \uC790\uB3D9\r\n *****************************************************************/\r\n.el-table table{\r\n  width:100%!important; border-collapse:collapse;border-spacing:0;\r\n  border-top:2.27px solid var(--ct-table-border);\r\n  border-bottom:2.27px solid var(--ct-table-border);\r\n  box-shadow:0 0 20px var(--ct-table-shadow);\r\n}\r\n.el-table th,.el-table td{border:none;padding:.51rem;line-height:1.1;}\r\n.el-table table>tbody>tr:first-child>th,\r\n.el-table table>tbody>tr:first-child>td{border-top:1.36px solid var(--ct-table-border);}\r\n.el-table table>tbody>tr:last-child>th,\r\n.el-table table>tbody>tr:last-child>td{border-bottom:1.36px solid var(--ct-table-border);}\r\n.el-table thead th{\r\n  font-weight:700;padding:8px 9px 5px;\r\n  background:var(--ct-base-white)!important;color:var(--ct-base-black);\r\n}\r\n.theme-dark .el-table thead th{\r\n  background:var(--background-primary)!important;color:var(--ct-base-white);\r\n}\r\n.el-table tbody tr:nth-child(even){background:var(--ct-table-row-even);}\r\n.el-table tbody tr:hover td   {background:var(--ct-table-row-hover);}\r\n.theme-dark .el-table td      {color:var(--ct-base-white);}  /* \uD14D\uC2A4\uD2B8 \uD770\uC0C9 */\r\n\r\n/*****************************************************************\r\n *  \uC774\uBBF8\uC9C0(Embeds) & \uB9AC\uC2A4\uD2B8 \uB0B4 \uC774\uBBF8\uC9C0 \uBCF4\uD638\r\n *****************************************************************/\r\n.el-p.el-embed-image img,\r\nli .el-p.el-embed-image img,\r\nul li img,ol li img,\r\n.tab-content img,.tabs img{\r\n  display:block;width:700px;max-width:100%;height:auto;margin:1rem auto;\r\n  border:1px solid var(--ct-image-border);\r\n  box-shadow:0 4px 10px var(--ct-image-shadow);\r\n  border-radius:4px;\r\n}\r\nli img{display:block;max-width:100%;height:auto;margin:.5rem auto;}\r\n\r\n/*****************************************************************\r\n *  \uBA54\uD0C0\uB370\uC774\uD130 \uD328\uB110 \uC228\uAE40(.hide_properties) \u2013 \uC6D0\uBCF8 \uC720\uC9C0\r\n *****************************************************************/\r\n.hide_properties .metadata-container,\r\n.hide_properties .metadata-properties,\r\n.hide_properties .metadata-property,\r\n.hide_properties .metadata-collapse-indicator,\r\n.hide_properties .frontmatter-container,\r\n.hide_properties .frontmatter{display:none!important;}\r\n\r\n/* \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\n   \uD5E4\uB354 \uB0B4\uBD80:  \uBC88\uD638 \u2192 \uD14D\uC2A4\uD2B8 \u2192 \uC811\uAE30\uC544\uC774\uCF58(\uC6B0\uCE21)  +  \uACB9\uCE68 \uD574\uC18C\r\n   \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 */\r\n\r\n/* \u2460 \uD5E4\uB354 \uCEE8\uD14C\uC774\uB108\uB294 \uC774\uBBF8 flex; \uC815\uB82C\uB9CC \uD655\uC778 */\r\n.markdown-preview-view h1,\r\n.markdown-preview-view h2,\r\n.markdown-preview-view h3,\r\n.markdown-preview-view h4,\r\n.markdown-preview-view h5,\r\n.markdown-preview-view h6{\r\n  display:flex!important;          /* \uD639\uC2DC inline-flex\uAC00 \uC544\uB2CC \uACBD\uC6B0 \uB300\uBE44 */\r\n  align-items:center;\r\n  width:100%!important;            /* \uBC11\uC904 100 % */\r\n  margin:5px 0!important;\r\n  border-bottom-style:outset;\r\n}\r\n/* \u2461 \uBC88\uD638(ct-hn-label) \u2013 \uB9E8 \uC55E */\r\n.markdown-preview-view h1 .ct-hn-label,\r\n.markdown-preview-view h2 .ct-hn-label,\r\n.markdown-preview-view h3 .ct-hn-label,\r\n.markdown-preview-view h4 .ct-hn-label,\r\n.markdown-preview-view h5 .ct-hn-label,\r\n.markdown-preview-view h6 .ct-hn-label{\r\n  order:0;\r\n  flex:0 0 auto;\r\n  margin-right:.35em;\r\n}\r\n/* \u2462 \uC811\uAE30 \uC544\uC774\uCF58 \u2013 \uC808\uB300\u2192\uC815\uC801 + \uC6B0\uCE21 \uB05D */\r\n.markdown-preview-view .heading-collapse-indicator.collapse-indicator{\r\n  position:static!important;       /* \u2190 \uACB9\uCE68 \uC6D0\uC778 \uC81C\uAC70 */\r\n  order:2;                         /* \uB9E8 \uB4A4 */\r\n  flex:0 0 auto;\r\n  margin-left:auto;                /* \uB0A8\uC740 \uACF5\uAC04 \uCC44\uC6B0\uACE0 \uC6B0\uCE21 \uC815\uB82C */\r\n}\r\n\r\n\r\n/* settings \uD0ED \uC548\uB0B4 \uBB38\uAD6C */\r\n.ct-tip{\r\n  font-size: 0.85em;\r\n  margin: 0 0 0.5em 0;\r\n  color: var(--text-muted);\r\n}\r\n';

// src/core/theme/DesignService.ts
var _DesignService = class _DesignService {
  constructor(app, cfgGetter) {
    this.root = document.documentElement;
    this.cfg = cfgGetter;
    this.applyAll();
    app.workspace.on("css-change", () => this.applyAll());
  }
  applyAll() {
    const { tokens, customCss } = this.cfg();
    const mode = document.body.classList.contains("theme-dark") ? "dark" : "light";
    injectTokens(mode, tokens != null ? tokens : DEFAULT_TOKENS);
    this.upsertStyle(_DesignService.BASE, base_default);
    this.upsertStyle(_DesignService.CUSTOM, customCss || "");
  }
  /* util */
  upsertStyle(id, css) {
    let el = document.getElementById(id);
    if (!el && css) {
      el = Object.assign(document.createElement("style"), { id });
      document.head.appendChild(el);
    }
    if (el) el.textContent = css;
  }
};
/* style 태그 id */
_DesignService.BASE = "ct-base-theme";
_DesignService.CUSTOM = "ct-custom-css";
var DesignService = _DesignService;

// src/features/interactive-table/utils/cloneRootStyle.ts
function cloneRootStyleToLeaves(app) {
  const src = document.documentElement.style.cssText;
  app.workspace.iterateAllLeaves((leaf) => {
    var _a3, _b;
    const doc = (_b = (_a3 = leaf.view) == null ? void 0 : _a3.containerEl) == null ? void 0 : _b.ownerDocument;
    if (doc && doc !== document) {
      doc.documentElement.style.cssText = src;
    }
  });
}

// src/core/Plugin.ts
var _a;
(_a = window.coverTable) != null ? _a : window.coverTable = {};
var ct = window.coverTable;
var _a2;
(_a2 = ct.waitForEngine) != null ? _a2 : ct.waitForEngine = async (timeout = 4e3) => {
  const t0 = Date.now();
  while (Date.now() - t0 < timeout) {
    if (ct.engine) return ct.engine;
    await new Promise((r) => setTimeout(r, 40));
  }
  throw new Error("coverTable.waitForEngine \u2192 timeout");
};
var HIDE_NOTES_CLASS = "ct-hide-notes";
var HIDE_NOTES_STYLE = `
/* Cover-Table \u2192 hide ALL notes */
body.${HIDE_NOTES_CLASS} .nav-file{ display:none !important; }
`;
var _CoverTablePlugin = class _CoverTablePlugin extends import_obsidian7.Plugin {
  constructor() {
    super(...arguments);
    this.headerNumbering = null;
    this.explorerStyleEl = null;
  }
  /* -----------------------------------------------------------
   *  applyZeroFolderVisibility()
   *  · “0_” prefix 폴더를 탐색기에서 숨김
   * ----------------------------------------------------------- */
  applyZeroFolderVisibility() {
    const id = _CoverTablePlugin.ZERO_FOLDER_STYLE_ID;
    let tag = document.getElementById(id);
    if (this.settings.hideZeroFolders) {
      if (!tag) {
        tag = document.createElement("style");
        tag.id = id;
        tag.textContent = `
/* Cover-Table \u25BA hide 0_ folders */
.nav-file-title[data-path^="0_"],
.nav-folder-title[data-path^="0_"],
.nav-file-title[data-path*="/0_"],
.nav-folder-title[data-path*="/0_"]{ display:none!important; }`;
        document.head.appendChild(tag);
      }
    } else {
      tag == null ? void 0 : tag.remove();
    }
  }
  /* -----------------------------------------------------------
   *  applyExplorerHide()
   *  · 모든 파일(nav-file)을 숨기거나 표시
   * ----------------------------------------------------------- */
  applyExplorerHide() {
    if (!this.explorerStyleEl) {
      this.explorerStyleEl = document.createElement("style");
      this.explorerStyleEl.id = "ct-hide-notes-style";
      this.explorerStyleEl.textContent = HIDE_NOTES_STYLE;
      document.head.appendChild(this.explorerStyleEl);
    }
    document.body.classList.toggle(
      HIDE_NOTES_CLASS,
      this.settings.hideAllNotes
    );
  }
  /* ===========================================================
   *  onload()
   * -----------------------------------------------------------
   *  · 플러그인 초기화 & 각 서브-모듈 부트스트랩
   * =========================================================== */
  async onload() {
    EventBus.init(this.app);
    Log.d("[Cover-Table] \u25B6 onload");
    try {
      const base = this.app.vault.adapter instanceof import_obsidian8.FileSystemAdapter ? this.app.vault.adapter.getBasePath() : "";
      const pluginDir = this.manifest.dir || "";
      const absPath = (0, import_path.join)(base, pluginDir, "style.css");
      const cssText = (0, import_fs.readFileSync)(absPath, "utf8");
      const tag = document.createElement("style");
      tag.id = "ct-style-fallback";
      tag.textContent = cssText;
      document.head.appendChild(tag);
      this.register(() => tag.remove());
      Log.d("[Cover-Table] fallback style injected \u2714");
    } catch (e) {
      Log.d("[Cover-Table] fallback style inject FAIL", e);
    }
    this.tabManager = new TabManager(this.app);
    if (!ct.engine) ct.engine = new InteractiveTableController(this.app);
    if (!ct.ganttController) ct.ganttController = new GanttController(this.app);
    ct.obsidian = { Notice: import_obsidian7.Notice, Modal: import_obsidian7.Modal, SuggestModal: import_obsidian7.SuggestModal };
    await this.loadSettings();
    Log.setDebug(this.settings.debugLog);
    try {
      const st = new CoverTableSettingTab(this.app, this);
      this.addSettingTab(st);
      Log.d("\u{1F197} CoverTableSettingTab \uB4F1\uB85D \uC644\uB8CC");
    } catch (e) {
      Log.e("\u274C SettingTab \uC0DD\uC131 \uC2E4\uD328:", e);
      new import_obsidian7.Notice("Cover-Table \uC124\uC815 UI \uB85C\uB4DC \uC2E4\uD328 \u2014 \uCF58\uC194(DevTools)\uC744 \uD655\uC778\uD558\uC138\uC694.");
    }
    this.applyZeroFolderVisibility();
    this.applyExplorerHide();
    this.embed = new EmbedService(this, () => this.settings.embed);
    this.embed.enable();
    this.listCallouts = new ListCalloutManager(this);
    this.registerEditorExtension(this.listCallouts.editorExtensions());
    this.registerMarkdownPostProcessor(this.listCallouts.postProcessor(), 1e4);
    this.reloadHeaderNumbering();
    this.design = new DesignService(this.app, () => this.settings);
    this.registerMarkdownPostProcessor(
      async (el, ctx) => {
        var _a3;
        const codes = el.querySelectorAll(
          "pre > code.language-ct, pre > code.language-cover-table"
        );
        if (codes.length === 0) return;
        const dv = window.dataviewApi || window.DataviewAPI || window.dvAPI;
        if (!dv) {
          Log.w("[Cover-Table] Dataview API not found");
          return;
        }
        await ct.waitForEngine();
        for (const code of Array.from(codes)) {
          try {
            const opts = JSON.parse(code.textContent || "{}");
            const container = code.parentElement;
            if (opts.type === "gantt") {
              (_a3 = opts.renderInteractiveBelow) != null ? _a3 : opts.renderInteractiveBelow = true;
              await ct.ganttController.renderView(dv, opts, ctx, container);
              continue;
            }
            if (ctx)
              await ct.engine.renderAutoView(dv, opts, ctx, container);
          } catch (e) {
            Log.e("[Cover-Table] render error:", e);
          }
        }
      }
    );
    Log.d("[Cover-Table] \u25B6 onload done");
    window.addEventListener("unhandledrejection", (ev) => {
      var _a3;
      const msg = String(((_a3 = ev.reason) == null ? void 0 : _a3.message) || ev.reason || "").toLowerCase();
      if (msg.includes("cannot read properties of null") && msg.includes("children")) {
        ev.preventDefault();
        return;
      }
      if (msg.includes("illegal access")) {
        ev.preventDefault();
      }
    });
    this.registerEvent(
      this.app.workspace.on("layout-change", () => {
        cloneRootStyleToLeaves(this.app);
      })
    );
  }
  /* ===========================================================
   *  onunload()
   * -----------------------------------------------------------
   *  · 리스너 / 싱글턴 해제
   * =========================================================== */
  onunload() {
    Log.d("[Cover-Table] \u25B6 onunload");
    this.tabManager.destroy();
    this.embed.destroy();
  }
  /* ===========================================================
   *  Settings helpers
   * =========================================================== */
  async loadSettings() {
    const raw = await this.loadData();
    this.settings = Object.assign({}, DEFAULT_SETTINGS, raw);
    this.settings.embed = Object.assign({}, DEFAULT_EMBED_SETTINGS, this.settings.embed);
  }
  async saveSettings() {
    await this.saveData(this.settings);
    Log.setDebug(this.settings.debugLog);
    this.applyZeroFolderVisibility();
    this.applyExplorerHide();
    this.embed.reload();
    this.applyDesignSettings();
    cloneRootStyleToLeaves(this.app);
  }
  /* ===========================================================
   *  Theme / Design 적용
   * =========================================================== */
  /* ===========================================================
   *  Theme / Design 적용
   * =========================================================== */
  applyDesignSettings() {
    const mode = this.app.getTheme() === "obsidian-dark" ? "dark" : "light";
    const root = document.documentElement;
    const idVars = "ct-base-vars";
    let stVars = document.getElementById(idVars);
    if (!stVars) {
      stVars = document.createElement("style");
      stVars.id = idVars;
      document.head.appendChild(stVars);
    }
    const vars = this.settings.baseVars;
    const rootBlock = [];
    const darkBlock = [];
    Object.entries(vars).forEach(([k, v]) => {
      (k.endsWith("-dark") ? darkBlock : rootBlock).push(`${k}:${v};`);
    });
    stVars.textContent = `
      :root{${rootBlock.join("")}}
      .theme-dark{${darkBlock.join("")}}
    `;
    const idCustom = "ct-custom-css";
    let stCustom = document.getElementById(idCustom);
    if (!stCustom) {
      stCustom = document.createElement("style");
      stCustom.id = idCustom;
      document.head.appendChild(stCustom);
    }
    stCustom.textContent = this.settings.customCss || "";
  }
  /* ===========================================================
   *  Header Numbering(Toggle)
   * =========================================================== */
  reloadHeaderNumbering() {
    var _a3;
    this.headerNumbering = null;
    if (!this.settings.enableHeaderNumbering) {
      if (!document.getElementById("ct-hn-hide")) {
        const st = document.createElement("style");
        st.id = "ct-hn-hide";
        st.textContent = `.ct-hn-label{ display:none!important; }`;
        document.head.appendChild(st);
      }
      return;
    }
    (_a3 = document.getElementById("ct-hn-hide")) == null ? void 0 : _a3.remove();
    this.headerNumbering = new HeaderNumberingService(this);
    this.headerNumbering.register();
  }
  /* ===========================================================
  *  List-Callout helpers
  *  · SettingTab → commit() 에서 호출
  * =========================================================== */
  rebuildListCallouts() {
    if (this.listCallouts) {
      this.listCallouts.rebuild();
    }
  }
};
/* ── 필드 ─────────────────────────────────────────────────── */
_CoverTablePlugin.ZERO_FOLDER_STYLE_ID = "ct-hide-zero-folders";
var CoverTablePlugin = _CoverTablePlugin;
//# sourceMappingURL=data:application/json;base64,
